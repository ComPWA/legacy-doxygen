<map id="internal::key_matching_port&lt; TraitsType &gt;" name="internal::key_matching_port&lt; TraitsType &gt;">
<area shape="rect" id="node3" href="$classinternal_1_1hash__buffer.html" title="{internal::hash_buffer\l\&lt; TraitsType::K, TraitsType\l::T, TraitsType::TtoK, TraitsType\l::KHash \&gt;\n|+ INITIAL_SIZE\l&#45; my_key\l&#45; my_size\l&#45; nelements\l|+ hash_buffer()\l+ ~hash_buffer()\l+ reset()\l+ set_key_func()\l+ get_key_func()\l+ insert_with_key()\l+ find_ref_with_key()\l+ find_with_key()\l+ delete_with_key()\l&#45; mask()\l&#45; set_up_free_list()\l&#45; grow_array()\l&#45; internal_insert_with_key()\l&#45; internal_initialize\l_buffer()\l&#45; internal_free_buffer()\l}" alt="" coords="182,219,393,604"/>
<area shape="rect" id="node5" href="$structinternal_1_1type__plus__align.html" title="type mimicking std::pair but with trailing fill to ensure each element of an array ..." alt="" coords="223,5,386,127"/>
<area shape="rect" id="node6" href="$structinternal_1_1matching__forwarding__base.html" title="{internal::matching\l_forwarding_base\&lt; key\l_type \&gt;\n||+ matching_forwarding_base()\l+ increment_key_count()\l}" alt="" coords="417,351,635,472"/>
<area shape="rect" id="node7" href="$structinternal_1_1forwarding__base.html" title="{internal::forwarding_base\n|+ graph_ref\l|+ forwarding_base()\l+ ~forwarding_base()\l+ decrement_port_count()\l+ increment_port_count()\l}" alt="" coords="420,5,613,127"/>
<area shape="rect" id="node8" href="$structtbb_1_1internal_1_1strip.html" title="{tbb::internal::strip\l\&lt; key_type \&gt;\n||}" alt="" coords="637,20,772,112"/>
</map>
