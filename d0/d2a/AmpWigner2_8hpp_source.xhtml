<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ComPWA: Physics/AmplitudeSum/AmpWigner2.hpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ComPWA</div>
   <div id="projectbrief">Common Partial-Wave-Analysis Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">Physics/AmplitudeSum/AmpWigner2.hpp</div>  </div>
</div>
<div class="contents">
<a href="../../d0/d2a/AmpWigner2_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//-------------------------------------------------------------------------------</span>
<a name="l00002"></a>00002 <span class="comment">// Copyright (c) 2013 Mathias Michel.</span>
<a name="l00003"></a>00003 <span class="comment">// All rights reserved. This program and the accompanying materials</span>
<a name="l00004"></a>00004 <span class="comment">// are made available under the terms of the GNU Public License v3.0</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available at</span>
<a name="l00006"></a>00006 <span class="comment">// http://www.gnu.org/licenses/gpl.html</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">//     Mathias Michel</span>
<a name="l00010"></a>00010 <span class="comment">//     Peter Weidenkaff</span>
<a name="l00011"></a>00011 <span class="comment">//-------------------------------------------------------------------------------</span>
<a name="l00012"></a>00012 
<a name="l00014"></a>00014 
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef AMPWIGNER2</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define AMPWIGNER2</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;qft++.h&quot;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="../../d1/d72/DPKinematics_8hpp.xhtml" title="DPKinematics stores kinematic information of a dalitz plot.">Physics/DPKinematics/DPKinematics.hpp</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="../../d8/dd4/DataPoint_8hpp.xhtml" title="dataPoint stores kinematic information of a dalitz plot">Physics/DPKinematics/DataPoint.hpp</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="../../df/d9f/ParameterList_8hpp.xhtml" title="This class provides a list of fit parameters which can have different types.">Core/ParameterList.hpp</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="../../dc/d66/Functions_8hpp.xhtml" title="This file contains Functions implementing the Strategy interface so they can be used inside a node of...">Core/Functions.hpp</a>&quot;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="keyword">using namespace </span>std;
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="keyword">class </span><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml">WignerDStrategy</a> : <span class="keyword">public</span> <a class="code" href="../../d2/df2/classStrategy.xhtml" title="Functions to be used in FuntionTree.">Strategy</a> {
<a name="l00035"></a>00035 <span class="keyword">public</span>:
<a name="l00036"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab89231aa03c8201761d66c79c624cc72">00036</a>   <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab89231aa03c8201761d66c79c624cc72">WignerDStrategy</a>(<span class="keyword">const</span> std::string resonanceName):name(resonanceName){
<a name="l00037"></a>00037     <span class="comment">//name = +resonanceName;</span>
<a name="l00038"></a>00038   }
<a name="l00039"></a>00039 
<a name="l00040"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a8d5e84224733a973b8f7b3a793c1fb04">00040</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> std::string <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a8d5e84224733a973b8f7b3a793c1fb04" title="Pure Virtual interface for streaming info about the strategy.">to_str</a>()<span class="keyword"> const </span>{
<a name="l00041"></a>00041     <span class="keywordflow">return</span> (<span class="stringliteral">&quot;WignerD of &quot;</span>+name);
<a name="l00042"></a>00042   }
<a name="l00043"></a>00043 
<a name="l00044"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a7cbcce522e75d1744079cb42017fe67a">00044</a>   <span class="keyword">virtual</span> std::shared_ptr&lt;AbsParameter&gt; <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a7cbcce522e75d1744079cb42017fe67a" title="Pure Virtual interface for executing a strategy.">execute</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d9d/classParameterList.xhtml" title="Internal container representing a parameter list.">ParameterList</a>&amp; paras) {
<a name="l00045"></a>00045 
<a name="l00046"></a>00046     <span class="keywordtype">double</span> Gamma0, GammaV;
<a name="l00047"></a>00047     <span class="keywordtype">double</span> _m23 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m23&quot;</span>));
<a name="l00048"></a>00048     <span class="keywordtype">double</span> _m13 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m13&quot;</span>));
<a name="l00049"></a>00049     <span class="keywordtype">double</span> _m12 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m12&quot;</span>));
<a name="l00050"></a>00050     <span class="keywordtype">double</span> _M  = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;M&quot;</span>));
<a name="l00051"></a>00051     <span class="keywordtype">double</span> _m1 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m1&quot;</span>));
<a name="l00052"></a>00052     <span class="keywordtype">double</span> _m2 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m2&quot;</span>));
<a name="l00053"></a>00053     <span class="keywordtype">double</span> _m3 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m3&quot;</span>));
<a name="l00054"></a>00054     <span class="comment">//double locmax_sq = double(paras.GetParameterValue(&quot;mb_&quot;+name));</span>
<a name="l00055"></a>00055     <span class="comment">//double locmin_sq = double(paras.GetParameterValue(&quot;mb_&quot;+name));</span>
<a name="l00056"></a>00056     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _subSysFlag = (<span class="keywordtype">unsigned</span> int)(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;subSysFlag_&quot;</span>+name));
<a name="l00057"></a>00057     <span class="keywordtype">double</span> _inSpin = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;inSpin_&quot;</span>+name));
<a name="l00058"></a>00058     <span class="keywordtype">double</span> _outSpin1 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;outSpin1_&quot;</span>+name));
<a name="l00059"></a>00059     <span class="keywordtype">double</span> _outSpin2 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;outSpin2_&quot;</span>+name));
<a name="l00060"></a>00060 
<a name="l00061"></a>00061     <span class="keywordtype">double</span> locmin_sq, locmax_sq, beta;
<a name="l00062"></a>00062 
<a name="l00063"></a>00063     <span class="keywordflow">switch</span>(_subSysFlag){
<a name="l00064"></a>00064       <span class="keywordflow">case</span> 1:{ <span class="comment">//reso in m23</span>
<a name="l00065"></a>00065         locmin_sq = s2min(_m23*_m23,_M,_m1,_m2,_m3);
<a name="l00066"></a>00066         locmax_sq = s2max(_m23*_m23,_M,_m1,_m2,_m3);
<a name="l00067"></a>00067         beta=acos((2.*_m13*_m13-locmax_sq-locmin_sq)/(locmax_sq-locmin_sq));
<a name="l00068"></a>00068         <span class="keywordflow">break</span>;
<a name="l00069"></a>00069       }
<a name="l00070"></a>00070       <span class="keywordflow">case</span> 2:{ <span class="comment">//reso in m13</span>
<a name="l00071"></a>00071         locmin_sq = s1min(_m13*_m13,_M,_m1,_m2,_m3);
<a name="l00072"></a>00072         locmax_sq = s1max(_m13*_m13,_M,_m1,_m2,_m3);
<a name="l00073"></a>00073         beta=acos((2.*_m23*_m23-locmax_sq-locmin_sq)/(locmax_sq-locmin_sq));
<a name="l00074"></a>00074         <span class="keywordflow">break</span>;
<a name="l00075"></a>00075       }
<a name="l00076"></a>00076       <span class="keywordflow">case</span> 3:{ <span class="comment">//reso in m12</span>
<a name="l00077"></a>00077         <span class="comment">//return 1;</span>
<a name="l00078"></a>00078         locmin_sq = s1min(_m12*_m12,_M,_m1,_m3,_m2);
<a name="l00079"></a>00079         locmax_sq = s1max(_m12*_m12,_M,_m1,_m3,_m2);
<a name="l00080"></a>00080         beta=acos((2.*_m23*_m23-locmax_sq-locmin_sq)/(locmax_sq-locmin_sq));
<a name="l00081"></a>00081         <span class="keywordflow">if</span>(beta!=beta) <span class="keywordflow">return</span> NULL;
<a name="l00082"></a>00082         <span class="keywordflow">break</span>;
<a name="l00083"></a>00083       }
<a name="l00084"></a>00084     }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086     <span class="comment">//double locmin_sq = s2min(_y*_y), locmax_sq = s2max(_y*_y);</span>
<a name="l00087"></a>00087     <span class="comment">//if( _x*_x&gt;locmax_sq || _x*_x&lt;locmin_sq )</span>
<a name="l00088"></a>00088     <span class="comment">//  return 0.;</span>
<a name="l00089"></a>00089 
<a name="l00090"></a>00090     Spin j(_inSpin), m(_outSpin1), n(_outSpin2);
<a name="l00091"></a>00091     std::shared_ptr&lt;DoubleParameter&gt; result = std::shared_ptr&lt;DoubleParameter&gt;(<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>(<span class="stringliteral">&quot;WignerD of &quot;</span>+name+<span class="stringliteral">&quot; result&quot;</span>,Wigner_d(j,m,n,beta)));
<a name="l00092"></a>00092     <span class="keywordflow">return</span> result;
<a name="l00093"></a>00093   }
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="keyword">protected</span>:
<a name="l00096"></a>00096   std::string name;
<a name="l00097"></a>00097 
<a name="l00098"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a0f04b32990d76db119af0d9cb8bc26ee">00098</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a0f04b32990d76db119af0d9cb8bc26ee">lambda</a>(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> z)<span class="keyword">const</span>{
<a name="l00099"></a>00099     <span class="keywordflow">return</span> x*x+y*y+z*z-2.*x*y-2.*x*z-2.*y*z;
<a name="l00100"></a>00100   }
<a name="l00101"></a>00101 
<a name="l00102"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#aa0ce49471e4697791403215ca4ead729">00102</a>   <span class="keywordtype">double</span> s2min(<span class="keywordtype">double</span> s1, <span class="keywordtype">double</span> m0, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ada5f2cdf434605648b802a0e13f67c82">m2</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ade198176253fe8f58cd46dae72aae18e">m3</a>)<span class="keyword">const</span>
<a name="l00103"></a>00103 <span class="keyword">  </span>{
<a name="l00104"></a>00104           <span class="keywordtype">double</span> s      = m0*m0;
<a name="l00105"></a>00105           <span class="keywordtype">double</span> lamterm = sqrt( lambda(s1,s,m1*m1) ) * sqrt( lambda(s1, m2*m2, m3*m3) );
<a name="l00106"></a>00106 
<a name="l00107"></a>00107           <span class="keywordtype">double</span> result  = m1*m1 + m3*m3 + ( (s-s1-m1*<a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>)*(s1-m2*m2+m3*m3) - lamterm )/(2.*s1);
<a name="l00108"></a>00108 
<a name="l00109"></a>00109         <span class="keywordflow">return</span> result;
<a name="l00110"></a>00110   }
<a name="l00111"></a>00111 
<a name="l00112"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab276cffd026c52f2f2d415499b0681bf">00112</a>   <span class="keywordtype">double</span> s2max(<span class="keywordtype">double</span> s1, <span class="keywordtype">double</span> m0, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ada5f2cdf434605648b802a0e13f67c82">m2</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ade198176253fe8f58cd46dae72aae18e">m3</a>)<span class="keyword">const</span>
<a name="l00113"></a>00113 <span class="keyword">  </span>{
<a name="l00114"></a>00114           <span class="keywordtype">double</span> s      = m0*m0;
<a name="l00115"></a>00115           <span class="keywordtype">double</span> lamterm = sqrt( lambda(s1,s,m1*m1) ) * sqrt( lambda(s1, m2*m2, m3*m3) );
<a name="l00116"></a>00116 
<a name="l00117"></a>00117           <span class="keywordtype">double</span> result  = m1*m1 + m3*m3 + ( (s-s1-m1*<a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>)*(s1-m2*m2+m3*m3) + lamterm )/(2.*s1);
<a name="l00118"></a>00118 
<a name="l00119"></a>00119         <span class="keywordflow">return</span> result;
<a name="l00120"></a>00120   }
<a name="l00121"></a>00121 
<a name="l00122"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#af53fed3b1536ab543f521ac4b5b2c910">00122</a>   <span class="keywordtype">double</span> s3min(<span class="keywordtype">double</span> s1, <span class="keywordtype">double</span> m0, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ada5f2cdf434605648b802a0e13f67c82">m2</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ade198176253fe8f58cd46dae72aae18e">m3</a>)<span class="keyword">const</span>
<a name="l00123"></a>00123 <span class="keyword">  </span>{
<a name="l00124"></a>00124           <span class="keywordtype">double</span> s      = m0*m0;
<a name="l00125"></a>00125           <span class="keywordtype">double</span> lamterm = sqrt( lambda(s1,s,m1*m1) ) * sqrt( lambda(s1, m3*m3, m1*m1) );
<a name="l00126"></a>00126 
<a name="l00127"></a>00127           <span class="keywordtype">double</span> result  = m1*m1 + m2*m2 + ( (s-s1-m1*<a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>)*(s1-m1*m1+m2*m2) - lamterm )/(2.*s1);
<a name="l00128"></a>00128 
<a name="l00129"></a>00129         <span class="keywordflow">return</span> result;
<a name="l00130"></a>00130   }
<a name="l00131"></a>00131 
<a name="l00132"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a345b7f57929dbdcb886308f330230758">00132</a>   <span class="keywordtype">double</span> s3max(<span class="keywordtype">double</span> s1, <span class="keywordtype">double</span> m0, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ada5f2cdf434605648b802a0e13f67c82">m2</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ade198176253fe8f58cd46dae72aae18e">m3</a>)<span class="keyword">const</span>
<a name="l00133"></a>00133 <span class="keyword">  </span>{
<a name="l00134"></a>00134           <span class="keywordtype">double</span> s      = m0*m0;
<a name="l00135"></a>00135           <span class="keywordtype">double</span> lamterm = sqrt( lambda(s1,s,m1*m1) ) * sqrt( lambda(s1, m3*m3, m1*m1) );
<a name="l00136"></a>00136 
<a name="l00137"></a>00137           <span class="keywordtype">double</span> result  = m1*m1 + m2*m2 + ( (s-s1-m1*<a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>)*(s1-m1*m1+m3*m3) + lamterm )/(2.*s1);
<a name="l00138"></a>00138 
<a name="l00139"></a>00139         <span class="keywordflow">return</span> result;
<a name="l00140"></a>00140   }
<a name="l00141"></a>00141 
<a name="l00142"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab067c53cf556812781dfdf46dc6d7c9b">00142</a>   <span class="keywordtype">double</span> s1min(<span class="keywordtype">double</span> s2, <span class="keywordtype">double</span> m0, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ada5f2cdf434605648b802a0e13f67c82">m2</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ade198176253fe8f58cd46dae72aae18e">m3</a>)<span class="keyword">const</span>
<a name="l00143"></a>00143 <span class="keyword">  </span>{
<a name="l00144"></a>00144           <span class="keywordtype">double</span> s      = m0*m0;
<a name="l00145"></a>00145           <span class="keywordtype">double</span> lamterm = sqrt( lambda(s2,s,m2*m2) ) * sqrt( lambda(s2, m3*m3, m1*m1) );
<a name="l00146"></a>00146 
<a name="l00147"></a>00147           <span class="keywordtype">double</span> result  = m2*m2 + m3*m3 + ( (s-s2-m2*<a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ada5f2cdf434605648b802a0e13f67c82">m2</a>)*(s2-m1*m1+m3*m3) - lamterm )/(2.*s2);
<a name="l00148"></a>00148 
<a name="l00149"></a>00149         <span class="keywordflow">return</span> result;
<a name="l00150"></a>00150   }
<a name="l00151"></a>00151 
<a name="l00152"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a35b5c5e76f158d94b1e1a3ca3371830f">00152</a>   <span class="keywordtype">double</span> s1max(<span class="keywordtype">double</span> s2, <span class="keywordtype">double</span> m0, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ad4b1dc0c54e834c5c1ca325ebcd66fc3">m1</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ada5f2cdf434605648b802a0e13f67c82">m2</a>, <span class="keywordtype">double</span> <a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ade198176253fe8f58cd46dae72aae18e">m3</a>)<span class="keyword">const</span>
<a name="l00153"></a>00153 <span class="keyword">  </span>{
<a name="l00154"></a>00154           <span class="keywordtype">double</span> s      = m0*m0;
<a name="l00155"></a>00155           <span class="keywordtype">double</span> lamterm = sqrt( lambda(s2,s,m2*m2) ) * sqrt( lambda(s2, m1*m1, m3*m3) );
<a name="l00156"></a>00156 
<a name="l00157"></a>00157           <span class="keywordtype">double</span> result  = m2*m2 + m3*m3 + ( (s-s2-m2*<a class="code" href="../../de/d2f/Physics_2RootGenerator_2GenDalitzApp_8cpp.xhtml#ada5f2cdf434605648b802a0e13f67c82">m2</a>)*(s2-m1*m1+m3*m3) + lamterm )/(2.*s2);
<a name="l00158"></a>00158 
<a name="l00159"></a>00159         <span class="keywordflow">return</span> result;
<a name="l00160"></a>00160   }
<a name="l00161"></a>00161 
<a name="l00162"></a>00162 };
<a name="l00163"></a>00163 
<a name="l00164"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml">00164</a> <span class="keyword">class </span><a class="code" href="../../db/ddf/classAmpWigner2.xhtml" title="The helicity angle for sub system  is calculated and the value of the WignerD function is returned...">AmpWigner2</a>{
<a name="l00165"></a>00165 <span class="keyword">public</span>:
<a name="l00166"></a>00166   <a class="code" href="../../db/ddf/classAmpWigner2.xhtml" title="The helicity angle for sub system  is calculated and the value of the WignerD function is returned...">AmpWigner2</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> subSys, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> resSpin);
<a name="l00167"></a>00167 
<a name="l00168"></a>00168   <a class="code" href="../../db/ddf/classAmpWigner2.xhtml" title="The helicity angle for sub system  is calculated and the value of the WignerD function is returned...">AmpWigner2</a>(<span class="keyword">const</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml" title="The helicity angle for sub system  is calculated and the value of the WignerD function is returned...">AmpWigner2</a>&amp;, <span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00169"></a>00169 
<a name="l00170"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#aeda7e56ae28aa27efbb58e8d80e5b620">00170</a>   <span class="keyword">virtual</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#aeda7e56ae28aa27efbb58e8d80e5b620">~AmpWigner2</a>() {};
<a name="l00171"></a>00171 
<a name="l00172"></a>00172   <span class="keyword">virtual</span> <span class="keywordtype">double</span> evaluate() <span class="keyword">const</span>;
<a name="l00173"></a>00173   <span class="comment">//double evaluateTree(const ParameterList&amp; paras, const std::string name) const;</span>
<a name="l00174"></a>00174   <span class="keywordtype">void</span> setDecayMasses(<span class="keywordtype">double</span>, <span class="keywordtype">double</span>, <span class="keywordtype">double</span>, <span class="keywordtype">double</span>);
<a name="l00175"></a>00175 
<a name="l00176"></a>00176 <span class="keyword">protected</span>:
<a name="l00177"></a>00177 
<a name="l00178"></a>00178   <span class="keyword">virtual</span> <span class="keywordtype">void</span> initialise();
<a name="l00179"></a>00179 
<a name="l00180"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a596d23b912cbccd0b3373e092b6ac032">00180</a>   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a596d23b912cbccd0b3373e092b6ac032">_resSpin</a>;
<a name="l00181"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a4a86f4588bdacf74219d69cf801846c4">00181</a>   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a4a86f4588bdacf74219d69cf801846c4">_subSys</a>;
<a name="l00182"></a>00182 
<a name="l00183"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#ae68bbb99384e3e0d1127d48734c3d744">00183</a>   <span class="keywordtype">double</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#ae68bbb99384e3e0d1127d48734c3d744">_M</a>;
<a name="l00184"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a369934eac18afe91d9bd44df519d56e8">00184</a>   <span class="keywordtype">double</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a369934eac18afe91d9bd44df519d56e8">_m1</a>;
<a name="l00185"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a4e22adf506b438adb0d64993d75912dc">00185</a>   <span class="keywordtype">double</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a4e22adf506b438adb0d64993d75912dc">_m2</a>;
<a name="l00186"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a4c589386d414131b71aeadfd7eab855e">00186</a>   <span class="keywordtype">double</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a4c589386d414131b71aeadfd7eab855e">_m3</a>;
<a name="l00187"></a>00187 
<a name="l00188"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#ab195bf7ef3ab10ff4c890dab437d29b3">00188</a>  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#ab195bf7ef3ab10ff4c890dab437d29b3">_spinM</a>;
<a name="l00189"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a1e98303f6e02fb62930a34d0b1e17b9f">00189</a>  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a1e98303f6e02fb62930a34d0b1e17b9f">_spin1</a>;
<a name="l00190"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a7b10ffc358fdbf62bd014d50cf97e027">00190</a>  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a7b10ffc358fdbf62bd014d50cf97e027">_spin2</a>;
<a name="l00191"></a><a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a925959311e4e59e412bd27c29f48984d">00191</a>  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a925959311e4e59e412bd27c29f48984d">_spin3</a>;
<a name="l00192"></a>00192 <span class="keyword">private</span>:
<a name="l00193"></a>00193 
<a name="l00194"></a>00194 };
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 <span class="preprocessor">#endif</span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Wed Dec 4 2013 for ComPWA by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.7.4 </small></address>
</body>
</html>
