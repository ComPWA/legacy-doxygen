<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ComPWA: PWAParameter Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ComPWA</div>
   <div id="projectbrief">Common Partial-Wave-Analysis Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">PWAParameter Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="PWAParameter" -->
<p><a class="el" href="../../d9/de5/classBase.xhtml">Base</a> class for internal parameter.  
 <a href="../../d2/d41/classPWAParameter.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/d85/PWAParameter_8hpp_source.xhtml">PWAParameter.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for PWAParameter:</div>
<div class="dyncontent">
<div class="center"><iframe src="../../da/dc5/classPWAParameter__inherit__graph.svg" width="731" height="1027" frameborder="0" scrolling="no"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="../../graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for PWAParameter:</div>
<div class="dyncontent">
<div class="center"><iframe src="../../de/d75/classPWAParameter__coll__graph.svg" width="176" height="696" frameborder="0" scrolling="no"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="../../graph_legend.xhtml">legend</a>]</span></center></div>

<p><a href="../../dc/d0b/classPWAParameter-members.xhtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a5f74eb470e87dee2c6232d57be4098b4">PWAParameter</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard constructor without information.  <a href="#a5f74eb470e87dee2c6232d57be4098b4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#abb22bfab643194b3f1685f8c9c857f5f">~PWAParameter</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Empty Destructor.  <a href="#abb22bfab643194b3f1685f8c9c857f5f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a6784e991bb00f1d5a115425e07bb1ee5">HasBounds</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if parameter has bounds.  <a href="#a6784e991bb00f1d5a115425e07bb1ee5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#af73b9467e4b3988b6826881c33181079">UseBounds</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if bounds should be used.  <a href="#af73b9467e4b3988b6826881c33181079"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#afae06859d2deeb750b9bd65e7c38f6fb">HasError</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if parameter has an error.  <a href="#afae06859d2deeb750b9bd65e7c38f6fb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a54294f7ba94bdfc507da479519fcee42">GetValue</a> () const =0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for value of parameter cast to double.  <a href="#a54294f7ba94bdfc507da479519fcee42"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#aef2524862d2ad22ad061cd64a14a6467">GetMinValue</a> () const =0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for lower bound of parameter cast to double.  <a href="#aef2524862d2ad22ad061cd64a14a6467"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a926950f56b7bd0ebd246cae77ea1500b">GetMaxValue</a> () const =0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for upper bound of parameter cast to double.  <a href="#a926950f56b7bd0ebd246cae77ea1500b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a1471bc8a2a8a4e0e4c5db16b28f844a2">GetError</a> () const =0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for error of parameter cast to double.  <a href="#a1471bc8a2a8a4e0e4c5db16b28f844a2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#ae71a61a9bf127e87b59a97f864ffced4">SetValue</a> (const double inVal)=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Setter for value of parameter cast to double.  <a href="#ae71a61a9bf127e87b59a97f864ffced4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a9289a1faa43eb67959e11d5e50084b2c">SetMinMax</a> (const double inMin, const double inMax)=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Setter for bounds of parameter cast to double.  <a href="#a9289a1faa43eb67959e11d5e50084b2c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a368ea723c3860700c79c38368615d238">SetError</a> (const double inErr)=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Setter for error of parameter cast to double.  <a href="#a368ea723c3860700c79c38368615d238"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a3683c4f449434c3767f384ed8fb697c1">UseBounds</a> (const bool use)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set if bounds should be used.  <a href="#a3683c4f449434c3767f384ed8fb697c1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#aa4c036889d0dc5939408ab21fdf6042d">to_str</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A public function returning a string with parameter information.  <a href="#aa4c036889d0dc5939408ab21fdf6042d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#ada7ecf50de381382dbc500c99888ba75">type</a> ()=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A public function returning a string naming its type.  <a href="#ada7ecf50de381382dbc500c99888ba75"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#adf13cd0d1afeebdfe0571ecc9043f38e">make_str</a> ()=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A protected function which creates an output string for printing.  <a href="#adf13cd0d1afeebdfe0571ecc9043f38e"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#ab058ea9b02d2637c56563f4cb350dba2">out_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Output string to print information.  <a href="#ab058ea9b02d2637c56563f4cb350dba2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#ae6fad21d8b2849c95871505d740e76bb">bounds_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Are valid bounds defined for this parameter?  <a href="#ae6fad21d8b2849c95871505d740e76bb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a4da02e4d7c2f368b9a6d90725813f392">error_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Is an error defined for this parameter?  <a href="#a4da02e4d7c2f368b9a6d90725813f392"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#a126bf4dac98f6579fdad974d2724459c">usebounds_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Do you want to restrict your parameter?  <a href="#a126bf4dac98f6579fdad974d2724459c"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d41/classPWAParameter.xhtml#ad65da6fd195ae0b6ecd3335b1c4c5a03">operator&lt;&lt;</a> (std::ostream &amp;os, const <a class="el" href="../../d2/d41/classPWAParameter.xhtml">PWAParameter</a> &amp;p)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">friend function to stream parameter information to output  <a href="#ad65da6fd195ae0b6ecd3335b1c4c5a03"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../d9/de5/classBase.xhtml">Base</a> class for internal parameter. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5f74eb470e87dee2c6232d57be4098b4"></a><!-- doxytag: member="PWAParameter::PWAParameter" ref="a5f74eb470e87dee2c6232d57be4098b4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PWAParameter::PWAParameter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Standard constructor without information. </p>
<p>Standard constructor without information provided. </p>

</div>
</div>
<a class="anchor" id="abb22bfab643194b3f1685f8c9c857f5f"></a><!-- doxytag: member="PWAParameter::~PWAParameter" ref="abb22bfab643194b3f1685f8c9c857f5f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual PWAParameter::~PWAParameter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Empty Destructor. </p>
<p>There is nothing to destroy :( </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a1471bc8a2a8a4e0e4c5db16b28f844a2"></a><!-- doxytag: member="PWAParameter::GetError" ref="a1471bc8a2a8a4e0e4c5db16b28f844a2" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const double PWAParameter::GetError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Getter for error of parameter cast to double. </p>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a310723e4ca56b8e6cbca08aa2788ddbb">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a310723e4ca56b8e6cbca08aa2788ddbb">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a310723e4ca56b8e6cbca08aa2788ddbb">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a310723e4ca56b8e6cbca08aa2788ddbb">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a926950f56b7bd0ebd246cae77ea1500b"></a><!-- doxytag: member="PWAParameter::GetMaxValue" ref="a926950f56b7bd0ebd246cae77ea1500b" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const double PWAParameter::GetMaxValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Getter for upper bound of parameter cast to double. </p>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#abf7d1bd64645e637e5db9fe2846c89b9">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#abf7d1bd64645e637e5db9fe2846c89b9">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#abf7d1bd64645e637e5db9fe2846c89b9">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#abf7d1bd64645e637e5db9fe2846c89b9">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="aef2524862d2ad22ad061cd64a14a6467"></a><!-- doxytag: member="PWAParameter::GetMinValue" ref="aef2524862d2ad22ad061cd64a14a6467" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const double PWAParameter::GetMinValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Getter for lower bound of parameter cast to double. </p>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#aae82f8b9e6c95753c68e812bcab9c3ce">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#aae82f8b9e6c95753c68e812bcab9c3ce">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#aae82f8b9e6c95753c68e812bcab9c3ce">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#aae82f8b9e6c95753c68e812bcab9c3ce">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a54294f7ba94bdfc507da479519fcee42"></a><!-- doxytag: member="PWAParameter::GetValue" ref="a54294f7ba94bdfc507da479519fcee42" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const double PWAParameter::GetValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Getter for value of parameter cast to double. </p>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a73a574779c34dddf5ee7c3cf2b12ed95">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a73a574779c34dddf5ee7c3cf2b12ed95">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a73a574779c34dddf5ee7c3cf2b12ed95">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a73a574779c34dddf5ee7c3cf2b12ed95">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a6784e991bb00f1d5a115425e07bb1ee5"></a><!-- doxytag: member="PWAParameter::HasBounds" ref="a6784e991bb00f1d5a115425e07bb1ee5" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const bool PWAParameter::HasBounds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check if parameter has bounds. </p>

</div>
</div>
<a class="anchor" id="afae06859d2deeb750b9bd65e7c38f6fb"></a><!-- doxytag: member="PWAParameter::HasError" ref="afae06859d2deeb750b9bd65e7c38f6fb" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const bool PWAParameter::HasError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check if parameter has an error. </p>

</div>
</div>
<a class="anchor" id="adf13cd0d1afeebdfe0571ecc9043f38e"></a><!-- doxytag: member="PWAParameter::make_str" ref="adf13cd0d1afeebdfe0571ecc9043f38e" args="()=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void PWAParameter::make_str </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected, pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A protected function which creates an output string for printing. </p>
<p>This function uses all available information about the parameter to create a string which will be streamed via the stream operator &lt;&lt;. </p>
<dl class="see"><dt><b>See also:</b></dt><dd>operator&lt;&lt;, <a class="el" href="../../d2/d41/classPWAParameter.xhtml#aa4c036889d0dc5939408ab21fdf6042d" title="A public function returning a string with parameter information.">to_str()</a> </dd></dl>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a79c5e4e98597e0d14ea054c3bba417f3">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a79c5e4e98597e0d14ea054c3bba417f3">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a79c5e4e98597e0d14ea054c3bba417f3">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a79c5e4e98597e0d14ea054c3bba417f3">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a368ea723c3860700c79c38368615d238"></a><!-- doxytag: member="PWAParameter::SetError" ref="a368ea723c3860700c79c38368615d238" args="(const double inErr)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void PWAParameter::SetError </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>inErr</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Setter for error of parameter cast to double. </p>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a739e05e724c995fa1e9434ab64558bb3">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a739e05e724c995fa1e9434ab64558bb3">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a739e05e724c995fa1e9434ab64558bb3">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a739e05e724c995fa1e9434ab64558bb3">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a9289a1faa43eb67959e11d5e50084b2c"></a><!-- doxytag: member="PWAParameter::SetMinMax" ref="a9289a1faa43eb67959e11d5e50084b2c" args="(const double inMin, const double inMax)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const bool PWAParameter::SetMinMax </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>inMin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>inMax</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Setter for bounds of parameter cast to double. </p>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a24e0d1a6f38538c7414cc356a91a1255">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a24e0d1a6f38538c7414cc356a91a1255">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a24e0d1a6f38538c7414cc356a91a1255">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a24e0d1a6f38538c7414cc356a91a1255">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="ae71a61a9bf127e87b59a97f864ffced4"></a><!-- doxytag: member="PWAParameter::SetValue" ref="ae71a61a9bf127e87b59a97f864ffced4" args="(const double inVal)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void PWAParameter::SetValue </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>inVal</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Setter for value of parameter cast to double. </p>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a0e67e29ddc70af3afecbd144313ee9b5">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a0e67e29ddc70af3afecbd144313ee9b5">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a0e67e29ddc70af3afecbd144313ee9b5">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a0e67e29ddc70af3afecbd144313ee9b5">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="aa4c036889d0dc5939408ab21fdf6042d"></a><!-- doxytag: member="PWAParameter::to_str" ref="aa4c036889d0dc5939408ab21fdf6042d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string const&amp; PWAParameter::to_str </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A public function returning a string with parameter information. </p>
<p>This function simply returns the member string out_, which contains all parameter information. The string gets rebuild with every change of the parameter. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>string with parameter information </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd>operator&lt;&lt;, <a class="el" href="../../d2/d41/classPWAParameter.xhtml#adf13cd0d1afeebdfe0571ecc9043f38e" title="A protected function which creates an output string for printing.">make_str()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ada7ecf50de381382dbc500c99888ba75"></a><!-- doxytag: member="PWAParameter::type" ref="ada7ecf50de381382dbc500c99888ba75" args="()=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string PWAParameter::type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A public function returning a string naming its type. </p>
<p>This function is used to get the type of the implementation of this general parameter interface. </p>

<p>Implemented in <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a32c44cebf508b1c23809fec5868bb56d">PWAGenericPar&lt; T &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a32c44cebf508b1c23809fec5868bb56d">PWAGenericPar&lt; double &gt;</a>, <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a32c44cebf508b1c23809fec5868bb56d">PWAGenericPar&lt; int &gt;</a>, and <a class="el" href="../../d4/dc2/classPWAGenericPar.xhtml#a32c44cebf508b1c23809fec5868bb56d">PWAGenericPar&lt; bool &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="a3683c4f449434c3767f384ed8fb697c1"></a><!-- doxytag: member="PWAParameter::UseBounds" ref="a3683c4f449434c3767f384ed8fb697c1" args="(const bool use)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const void PWAParameter::UseBounds </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>use</em></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set if bounds should be used. </p>

</div>
</div>
<a class="anchor" id="af73b9467e4b3988b6826881c33181079"></a><!-- doxytag: member="PWAParameter::UseBounds" ref="af73b9467e4b3988b6826881c33181079" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const bool PWAParameter::UseBounds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check if bounds should be used. </p>

</div>
</div>
<hr/><h2>Friends And Related Function Documentation</h2>
<a class="anchor" id="ad65da6fd195ae0b6ecd3335b1c4c5a03"></a><!-- doxytag: member="PWAParameter::operator&lt;&lt;" ref="ad65da6fd195ae0b6ecd3335b1c4c5a03" args="(std::ostream &amp;os, const PWAParameter &amp;p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/d41/classPWAParameter.xhtml">PWAParameter</a> &amp;&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>friend function to stream parameter information to output </p>
<p>Declaring the stream-operator &lt;&lt; as friend allows to stream parameter information to the output as easily as a generic type. The definition of this class has to be outside the namespace of the class. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../d2/d41/classPWAParameter.xhtml#adf13cd0d1afeebdfe0571ecc9043f38e" title="A protected function which creates an output string for printing.">make_str()</a>, <a class="el" href="../../d2/d41/classPWAParameter.xhtml#aa4c036889d0dc5939408ab21fdf6042d" title="A public function returning a string with parameter information.">to_str()</a> </dd></dl>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="ae6fad21d8b2849c95871505d740e76bb"></a><!-- doxytag: member="PWAParameter::bounds_" ref="ae6fad21d8b2849c95871505d740e76bb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../d2/d41/classPWAParameter.xhtml#ae6fad21d8b2849c95871505d740e76bb">PWAParameter::bounds_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Are valid bounds defined for this parameter? </p>

</div>
</div>
<a class="anchor" id="a4da02e4d7c2f368b9a6d90725813f392"></a><!-- doxytag: member="PWAParameter::error_" ref="a4da02e4d7c2f368b9a6d90725813f392" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../d2/d41/classPWAParameter.xhtml#a4da02e4d7c2f368b9a6d90725813f392">PWAParameter::error_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Is an error defined for this parameter? </p>

</div>
</div>
<a class="anchor" id="ab058ea9b02d2637c56563f4cb350dba2"></a><!-- doxytag: member="PWAParameter::out_" ref="ab058ea9b02d2637c56563f4cb350dba2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="../../d2/d41/classPWAParameter.xhtml#ab058ea9b02d2637c56563f4cb350dba2">PWAParameter::out_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Output string to print information. </p>

</div>
</div>
<a class="anchor" id="a126bf4dac98f6579fdad974d2724459c"></a><!-- doxytag: member="PWAParameter::usebounds_" ref="a126bf4dac98f6579fdad974d2724459c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../d2/d41/classPWAParameter.xhtml#a126bf4dac98f6579fdad974d2724459c">PWAParameter::usebounds_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Do you want to restrict your parameter? </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Core/<a class="el" href="../../d1/d85/PWAParameter_8hpp_source.xhtml">PWAParameter.hpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Thu Mar 21 2013 for ComPWA by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.7.4 </small></address>
</body>
</html>
