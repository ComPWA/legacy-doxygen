<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ComPWA: Physics/AmplitudeSum/AmpRelBreitWignerRes.hpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ComPWA</div>
   <div id="projectbrief">Common Partial-Wave-Analysis Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">Physics/AmplitudeSum/AmpRelBreitWignerRes.hpp</div>  </div>
</div>
<div class="contents">
<a href="../../d2/d45/AmpRelBreitWignerRes_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//-------------------------------------------------------------------------------</span>
<a name="l00002"></a>00002 <span class="comment">// Copyright (c) 2013 Mathias Michel.</span>
<a name="l00003"></a>00003 <span class="comment">// All rights reserved. This program and the accompanying materials</span>
<a name="l00004"></a>00004 <span class="comment">// are made available under the terms of the GNU Public License v3.0</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available at</span>
<a name="l00006"></a>00006 <span class="comment">// http://www.gnu.org/licenses/gpl.html</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">//     Mathias Michel - initial API and implementation</span>
<a name="l00010"></a>00010 <span class="comment">//              Peter Weidenkaff - correct nominator, using dataPoint for data handling</span>
<a name="l00011"></a>00011 <span class="comment">//-------------------------------------------------------------------------------</span>
<a name="l00012"></a>00012 <span class="comment">//****************************************************************************</span>
<a name="l00013"></a>00013 <span class="comment">// Class for defining the relativistic Breit-Wigner resonance model, which</span>
<a name="l00014"></a>00014 <span class="comment">// includes the use of Blatt-Weisskopf barrier factors.</span>
<a name="l00015"></a>00015 <span class="comment">//****************************************************************************</span>
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="comment">// --CLASS DESCRIPTION [MODEL] --</span>
<a name="l00018"></a>00018 <span class="comment">// Class for defining the relativistic Breit-Wigner resonance model, which</span>
<a name="l00019"></a>00019 <span class="comment">// includes the use of Blatt-Weisskopf barrier factors.</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef AMP_REL_BREIT_WIGNER_RES</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define AMP_REL_BREIT_WIGNER_RES</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="comment">//#include &quot;TObject.h&quot;</span>
<a name="l00027"></a>00027 <span class="comment">//#include &quot;TString.h&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="../../d3/d76/AmpAbsDynamicalFunction_8hpp.xhtml">Physics/AmplitudeSum/AmpAbsDynamicalFunction.hpp</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="../../d6/d6b/AmpKinematics_8hpp.xhtml">Physics/AmplitudeSum/AmpKinematics.hpp</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="../../d0/d2a/AmpWigner2_8hpp.xhtml" title="Angular distribution based on WignerD functions.">Physics/AmplitudeSum/AmpWigner2.hpp</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="../../dc/d66/Functions_8hpp.xhtml" title="This file contains Functions implementing the Strategy interface so they can be used inside a node of...">Core/Functions.hpp</a>&quot;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml">00033</a> <span class="keyword">class </span><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml">BreitWignerStrategy</a> : <span class="keyword">public</span> <a class="code" href="../../d2/df2/classStrategy.xhtml" title="Functions to be used in FuntionTree.">Strategy</a> {
<a name="l00034"></a>00034 <span class="keyword">public</span>:
<a name="l00035"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a03f58a46bb5ee82783fbcd4564eb67af">00035</a>   <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a03f58a46bb5ee82783fbcd4564eb67af">BreitWignerStrategy</a>(<span class="keyword">const</span> std::string resonanceName):<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>(resonanceName){
<a name="l00036"></a>00036     <span class="comment">//name = +resonanceName;</span>
<a name="l00037"></a>00037   }
<a name="l00038"></a>00038 
<a name="l00039"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a2eb3cdced43abdd4bf81369116d8559f">00039</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> std::string <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a2eb3cdced43abdd4bf81369116d8559f" title="Pure Virtual interface for streaming info about the strategy.">to_str</a>()<span class="keyword"> const </span>{
<a name="l00040"></a>00040     <span class="keywordflow">return</span> (<span class="stringliteral">&quot;relativistic BreitWigner of &quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>);
<a name="l00041"></a>00041   }
<a name="l00042"></a>00042 
<a name="l00043"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a62b89d4c9fba0133c6ee75a115082a2b">00043</a>   <span class="keyword">virtual</span> std::shared_ptr&lt;AbsParameter&gt; <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a62b89d4c9fba0133c6ee75a115082a2b" title="Pure Virtual interface for executing a strategy.">execute</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d9d/classParameterList.xhtml" title="Internal container representing a parameter list.">ParameterList</a>&amp; paras) {
<a name="l00044"></a>00044 
<a name="l00045"></a>00045     <span class="keywordtype">double</span> Gamma0, GammaV;
<a name="l00046"></a>00046     <span class="keywordtype">double</span> m0 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m0_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00047"></a>00047     <span class="keywordtype">double</span> m  = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;x_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00048"></a>00048     <span class="keywordtype">double</span> ma = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;ma_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00049"></a>00049     <span class="keywordtype">double</span> mb = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;mb_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00050"></a>00050     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> spin = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;spin_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00051"></a>00051     <span class="keywordtype">double</span> d = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;d_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00052"></a>00052 
<a name="l00053"></a>00053     Gamma0 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;resWidth_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00054"></a>00054     GammaV = Gamma0 * (m0 / m) * pow(<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a671477c14e10e2963a94b975b22814dc">q</a>(ma,mb,m) / <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a850157e4e3c2e35034294830b7831af3">q0</a>(ma,mb,m0), 2.*spin + 1.)  * <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#ad7e14362686c423d35266c4c59ced37a">BLprime2</a>(ma,mb,m0,m,d,spin);
<a name="l00055"></a>00055 
<a name="l00056"></a>00056     std::complex&lt;double&gt; denom(m0*m0 - m*m, -m0 * GammaV);
<a name="l00057"></a>00057     std::complex&lt;double&gt; res(m0 * Gamma0);
<a name="l00058"></a>00058     res = res / denom;
<a name="l00059"></a>00059 
<a name="l00060"></a>00060     <span class="comment">//std::complex&lt;double&gt; result (res.re(),res.im());</span>
<a name="l00061"></a>00061     std::shared_ptr&lt;ComplexParameter&gt; bw(<span class="keyword">new</span> <a class="code" href="../../d5/d65/classComplexParameter.xhtml">ComplexParameter</a>(<span class="stringliteral">&quot;relBW of &quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>, res));
<a name="l00062"></a>00062     <span class="keywordflow">return</span> bw;
<a name="l00063"></a>00063   }
<a name="l00064"></a>00064 
<a name="l00065"></a>00065 <span class="keyword">protected</span>:
<a name="l00066"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">00066</a>   std::string <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>;
<a name="l00067"></a>00067 
<a name="l00068"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a850157e4e3c2e35034294830b7831af3">00068</a>   <span class="keywordtype">double</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a850157e4e3c2e35034294830b7831af3">q0</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; ma, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; mb, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; m0)<span class="keyword"> const </span>{
<a name="l00069"></a>00069     <span class="keywordtype">double</span> mapb = ma + mb;
<a name="l00070"></a>00070     <span class="keywordtype">double</span> mamb = ma - mb;
<a name="l00071"></a>00071 
<a name="l00072"></a>00072     <span class="keywordflow">return</span> sqrt ( (m0*m0 - mapb*mapb) * (m0*m0 - mamb*mamb) ) / (2. * m0 );
<a name="l00073"></a>00073   }
<a name="l00074"></a>00074 
<a name="l00075"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a671477c14e10e2963a94b975b22814dc">00075</a>   <span class="keywordtype">double</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a671477c14e10e2963a94b975b22814dc">q</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; ma, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; mb, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; x)<span class="keyword"> const </span>{
<a name="l00076"></a>00076     <span class="keywordtype">double</span> mapb = ma + mb;
<a name="l00077"></a>00077     <span class="keywordtype">double</span> mamb = ma - mb;
<a name="l00078"></a>00078 
<a name="l00079"></a>00079     <span class="keywordflow">return</span> sqrt ( (x*x - mapb*mapb) * (x*x - mamb*mamb) ) / (2. * x );
<a name="l00080"></a>00080   }
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 
<a name="l00083"></a>00083   <span class="comment">// compute part of the Blatt-Weisskopf barrier factor</span>
<a name="l00084"></a>00084   <span class="comment">//   BLprime = sqrt (F(q0)/F(q))</span>
<a name="l00085"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a55cfaf6ac0c1ad2693607bfac584254d">00085</a>   <span class="keywordtype">double</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a55cfaf6ac0c1ad2693607bfac584254d">F</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; p, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; d, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; spin)<span class="keyword"> const </span>{
<a name="l00086"></a>00086     <span class="keywordtype">double</span> retVal = 1;
<a name="l00087"></a>00087 
<a name="l00088"></a>00088     <span class="keywordflow">if</span> (spin == 0)
<a name="l00089"></a>00089       retVal = 1;
<a name="l00090"></a>00090     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (spin == 1)
<a name="l00091"></a>00091       retVal = 1 + p*p * d*d;
<a name="l00092"></a>00092     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (spin == 2) {
<a name="l00093"></a>00093       <span class="keywordtype">double</span> z = p*p * d*d;
<a name="l00094"></a>00094       retVal = (z-3.)*(z-3.) + 9*z;
<a name="l00095"></a>00095     }
<a name="l00096"></a>00096     <span class="keywordflow">return</span> retVal;
<a name="l00097"></a>00097   }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 
<a name="l00100"></a>00100   <span class="comment">// compute square of Blatt-Weisskopf barrier factor</span>
<a name="l00101"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#ad7e14362686c423d35266c4c59ced37a">00101</a>   <span class="keywordtype">double</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#ad7e14362686c423d35266c4c59ced37a">BLprime2</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; ma, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; mb, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; m0, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; x, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; d, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; spin)<span class="keyword"> const </span>{
<a name="l00102"></a>00102     <span class="comment">//  cout &lt;&lt; q0() &lt;&lt; &quot; &quot; &lt;&lt; q() &lt;&lt; &quot;\t&quot; &lt;&lt; F(q0()) &lt;&lt; &quot; &quot; &lt;&lt; F(q()) &lt;&lt; endl;</span>
<a name="l00103"></a>00103     <span class="keywordflow">return</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a55cfaf6ac0c1ad2693607bfac584254d">F</a>(<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a850157e4e3c2e35034294830b7831af3">q0</a>(ma, mb, m0),d,spin) / <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a55cfaf6ac0c1ad2693607bfac584254d">F</a>(<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a671477c14e10e2963a94b975b22814dc">q</a>(ma, mb, x),d,spin);
<a name="l00104"></a>00104   }
<a name="l00105"></a>00105 
<a name="l00106"></a>00106 };
<a name="l00107"></a>00107 
<a name="l00108"></a><a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml">00108</a> <span class="keyword">class </span><a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml">AmpRelBreitWignerRes</a> : <span class="keyword">public</span> <a class="code" href="../../de/d75/classAmpAbsDynamicalFunction.xhtml">AmpAbsDynamicalFunction</a>, <span class="keyword">public</span> <a class="code" href="../../db/dbb/classAmpKinematics.xhtml">AmpKinematics</a> {
<a name="l00109"></a>00109 <span class="keyword">public</span>:
<a name="l00110"></a>00110 
<a name="l00111"></a>00111         <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#af71461e1dcfea083ae7a754bbe4c8b9f">AmpRelBreitWignerRes</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l00112"></a>00112                         <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>&amp; _resMass, <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>&amp; <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#a05d7b775ee20505e42b699870ca99441">_resWidth</a>,
<a name="l00113"></a>00113                         <span class="keywordtype">double</span>&amp; _radius,
<a name="l00114"></a>00114                         <span class="keywordtype">int</span> _subsys,
<a name="l00115"></a>00115                         <span class="keywordtype">int</span> resSpin, <span class="keywordtype">int</span> m, <span class="keywordtype">int</span> n
<a name="l00116"></a>00116         ) ;
<a name="l00117"></a>00117         <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#af71461e1dcfea083ae7a754bbe4c8b9f">AmpRelBreitWignerRes</a>(<span class="keyword">const</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml">AmpRelBreitWignerRes</a>&amp;, <span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00118"></a>00118         <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#af71461e1dcfea083ae7a754bbe4c8b9f">AmpRelBreitWignerRes</a>(<span class="keyword">const</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml">AmpRelBreitWignerRes</a>&amp;);
<a name="l00119"></a>00119 
<a name="l00120"></a>00120         <span class="keyword">virtual</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#aac4d56181d892f72c428320ff2970f7e">~AmpRelBreitWignerRes</a>();
<a name="l00121"></a>00121 
<a name="l00122"></a>00122         <span class="comment">//  double operator() (double *x, size_t dim, void*);</span>
<a name="l00123"></a>00123 
<a name="l00124"></a>00124         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#a157a0fe4973d10bfb002eb065ff341bd" title="Implementation of interface for executing a strategy.">initialise</a>();
<a name="l00125"></a>00125         <span class="keyword">virtual</span> std::complex&lt;double&gt; <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#a92e4278d123988fdda4a7a79eb95e7d9">evaluate</a>() <span class="keyword">const</span> ;
<a name="l00126"></a>00126         <span class="keyword">virtual</span> std::complex&lt;double&gt; <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#aa8b387554c7c4139111d892c0b1b6d4b">evaluateAmp</a>() <span class="keyword">const</span>;
<a name="l00127"></a>00127         <span class="comment">//virtual std::complex&lt;double&gt; evaluateTree(const ParameterList&amp; paras) const;</span>
<a name="l00128"></a><a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#ac43b3f3f2cb227fb22c435127a277703">00128</a>         <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#ac43b3f3f2cb227fb22c435127a277703">evaluateWignerD</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#af10d40c5667006004af42ffed8a0dc69">_wignerD</a>.<a class="code" href="../../db/ddf/classAmpWigner2.xhtml#a9a17a9a2c13cf6737ca5bb57a49a899f">evaluate</a>(); };
<a name="l00129"></a>00129         <span class="comment">//  virtual double eval(double x[],size_t dim, void *param) const;//used for MC integration</span>
<a name="l00130"></a>00130         <span class="comment">//  double (*eval2)(double x[],size_t dim, void *param);//used for MC integration</span>
<a name="l00131"></a>00131 
<a name="l00132"></a>00132         <span class="keywordtype">void</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#a0a1b827174d03cb8653e917103287fea">setDecayMasses</a>(<span class="keywordtype">double</span>, <span class="keywordtype">double</span>, <span class="keywordtype">double</span>, <span class="keywordtype">double</span>);
<a name="l00133"></a>00133         <span class="comment">//  double getMaximum() const{return 1;};</span>
<a name="l00134"></a><a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#afef3034eb12233fc25dc2227bf29fc01">00134</a>         <span class="keywordtype">double</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#afef3034eb12233fc25dc2227bf29fc01">getSpin</a>() {<span class="keywordflow">return</span> <a class="code" href="../../db/dbb/classAmpKinematics.xhtml#ac3b0b6eea54c34fa35b79a92a83f7ca8">_spin</a>;}; <span class="comment">//needs to be declared in AmpAbsDynamicalFunction</span>
<a name="l00135"></a><a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#aba77f30f583c0e70ebbc8967b674dbf8">00135</a>         <span class="keyword">inline</span> <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#aba77f30f583c0e70ebbc8967b674dbf8">isSubSys</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> subSys)<span class="keyword"> const</span>{ <span class="keywordflow">return</span> (subSys==<a class="code" href="../../db/dbb/classAmpKinematics.xhtml#a0f9ab4462eb9db5b8b547c8812c00f2e">_subSys</a>); };
<a name="l00136"></a>00136 
<a name="l00137"></a>00137 <span class="keyword">protected</span>:
<a name="l00138"></a>00138         <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#a05d7b775ee20505e42b699870ca99441">_resWidth</a>;
<a name="l00139"></a>00139 <span class="comment">//      AmpWigner _wignerD;</span>
<a name="l00140"></a><a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#af10d40c5667006004af42ffed8a0dc69">00140</a>         <a class="code" href="../../db/ddf/classAmpWigner2.xhtml" title="The helicity angle for sub system  is calculated and the value of the WignerD function is returned...">AmpWigner2</a> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml#af10d40c5667006004af42ffed8a0dc69">_wignerD</a>;
<a name="l00141"></a>00141 
<a name="l00142"></a>00142 <span class="keyword">private</span>:
<a name="l00143"></a>00143         <span class="comment">//ClassDef(AmpRelBreitWignerRes,1) // Relativistic Breit-Wigner resonance model</span>
<a name="l00144"></a>00144 
<a name="l00145"></a>00145 };
<a name="l00146"></a>00146 
<a name="l00147"></a>00147 <span class="preprocessor">#endif</span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Wed Dec 4 2013 for ComPWA by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.7.4 </small></address>
</body>
</html>
