<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ComPWA: Physics/AmplitudeSum/AmpSumTree.hpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ComPWA</div>
   <div id="projectbrief">Common Partial-Wave-Analysis Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">Physics/AmplitudeSum/AmpSumTree.hpp</div>  </div>
</div>
<div class="contents">
<a href="../../d6/d5d/AmpSumTree_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//-------------------------------------------------------------------------------</span>
<a name="l00002"></a>00002 <span class="comment">// Copyright (c) 2013 Mathias Michel.</span>
<a name="l00003"></a>00003 <span class="comment">// All rights reserved. This program and the accompanying materials</span>
<a name="l00004"></a>00004 <span class="comment">// are made available under the terms of the GNU Public License v3.0</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available at</span>
<a name="l00006"></a>00006 <span class="comment">// http://www.gnu.org/licenses/gpl.html</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">//     Mathias Michel - initial API and implementation</span>
<a name="l00010"></a>00010 <span class="comment">//-------------------------------------------------------------------------------</span>
<a name="l00011"></a>00011 <span class="comment">//****************************************************************************</span>
<a name="l00012"></a>00012 <span class="comment">// Wrapper to provide intensity of amplitude sum</span>
<a name="l00013"></a>00013 <span class="comment">//****************************************************************************</span>
<a name="l00014"></a>00014 
<a name="l00015"></a>00015 <span class="preprocessor">#ifndef _AMPSUMTREE_HPP</span>
<a name="l00016"></a>00016 <span class="preprocessor"></span><span class="preprocessor">#define _AMPSUMTREE_HPP</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span>
<a name="l00018"></a>00018 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00019"></a>00019 <span class="preprocessor">#include &lt;memory&gt;</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#include &quot;<a class="code" href="../../dc/de3/Amplitude_8hpp.xhtml" title="This class provides the interface to the model which tries to describe the intensity.">Physics/Amplitude.hpp</a>&quot;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &quot;<a class="code" href="../../db/dce/Parameter_8hpp.xhtml" title="This class implements some internal container of parameters.">Core/Parameter.hpp</a>&quot;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &quot;<a class="code" href="../../df/d9f/ParameterList_8hpp.xhtml" title="This class provides a list of fit parameters which can have different types.">Core/ParameterList.hpp</a>&quot;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="../../dc/d66/Functions_8hpp.xhtml" title="This file contains Functions implementing the Strategy interface so they can be used inside a node of...">Core/Functions.hpp</a>&quot;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="../../dd/d27/AmplitudeSetup_8hpp.xhtml" title="XML config parser for Amplitude Setup.">Physics/AmplitudeSum/AmplitudeSetup.hpp</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="../../d4/d9e/AmpSumOfAmplitudes_8hpp.xhtml">Physics/AmplitudeSum/AmpSumOfAmplitudes.hpp</a>&quot;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="keyword">class </span><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml">BreitWignerStrategy</a> : <span class="keyword">public</span> <a class="code" href="../../d2/df2/classStrategy.xhtml" title="Functions to be used in FuntionTree.">Strategy</a> {
<a name="l00030"></a>00030 <span class="keyword">public</span>:
<a name="l00031"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a03f58a46bb5ee82783fbcd4564eb67af">00031</a>   <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a03f58a46bb5ee82783fbcd4564eb67af">BreitWignerStrategy</a>(<span class="keyword">const</span> std::string resonanceName):<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>(resonanceName){
<a name="l00032"></a>00032     <span class="comment">//name = +resonanceName;</span>
<a name="l00033"></a>00033   }
<a name="l00034"></a>00034 
<a name="l00035"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a2eb3cdced43abdd4bf81369116d8559f">00035</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> std::string <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a2eb3cdced43abdd4bf81369116d8559f" title="Pure Virtual interface for streaming info about the strategy.">to_str</a>()<span class="keyword"> const </span>{
<a name="l00036"></a>00036     <span class="keywordflow">return</span> (<span class="stringliteral">&quot;relativistic BreitWigner of &quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>);
<a name="l00037"></a>00037   }
<a name="l00038"></a>00038 
<a name="l00039"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a62b89d4c9fba0133c6ee75a115082a2b">00039</a>   <span class="keyword">virtual</span> std::shared_ptr&lt;AbsParameter&gt; <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a62b89d4c9fba0133c6ee75a115082a2b" title="Pure Virtual interface for executing a strategy.">execute</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d9d/classParameterList.xhtml" title="Internal container representing a parameter list.">ParameterList</a>&amp; paras) {
<a name="l00040"></a>00040 
<a name="l00041"></a>00041     <span class="keywordtype">double</span> Gamma0, GammaV;
<a name="l00042"></a>00042     <span class="keywordtype">double</span> m0 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m0_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00043"></a>00043     <span class="keywordtype">double</span> m  = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;x_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00044"></a>00044     <span class="keywordtype">double</span> ma = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;ma_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00045"></a>00045     <span class="keywordtype">double</span> mb = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;mb_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00046"></a>00046     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> spin = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;spin_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00047"></a>00047     <span class="keywordtype">double</span> d = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;d_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00048"></a>00048 
<a name="l00049"></a>00049     Gamma0 = double(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;resWidth_&quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>));
<a name="l00050"></a>00050     GammaV = Gamma0 * (m0 / m) * pow(<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a671477c14e10e2963a94b975b22814dc">q</a>(ma,mb,m) / <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a850157e4e3c2e35034294830b7831af3">q0</a>(ma,mb,m0), 2.*spin + 1.)  * <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#ad7e14362686c423d35266c4c59ced37a">BLprime2</a>(ma,mb,m0,m,d,spin);
<a name="l00051"></a>00051 
<a name="l00052"></a>00052     RooComplex denom = RooComplex(m0*m0 - m*m, -m0 * GammaV);
<a name="l00053"></a>00053     RooComplex res = RooComplex(m0 * Gamma0) / denom;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055     std::complex&lt;double&gt; result (res.re(),res.im());
<a name="l00056"></a>00056     std::shared_ptr&lt;ComplexParameter&gt; bw(<span class="keyword">new</span> <a class="code" href="../../d5/d65/classComplexParameter.xhtml">ComplexParameter</a>(<span class="stringliteral">&quot;relBW of &quot;</span>+<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>, result));
<a name="l00057"></a>00057     <span class="keywordflow">return</span> bw;
<a name="l00058"></a>00058   }
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 <span class="keyword">protected</span>:
<a name="l00061"></a>00061   std::string <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a78ac1ff9544b4b28d1397d0b46d8e4bc">name</a>;
<a name="l00062"></a>00062 
<a name="l00063"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a850157e4e3c2e35034294830b7831af3">00063</a>   <span class="keywordtype">double</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a850157e4e3c2e35034294830b7831af3">q0</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; ma, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; mb, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; m0)<span class="keyword"> const </span>{
<a name="l00064"></a>00064     <span class="keywordtype">double</span> mapb = ma + mb;
<a name="l00065"></a>00065     <span class="keywordtype">double</span> mamb = ma - mb;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067     <span class="keywordflow">return</span> sqrt ( (m0*m0 - mapb*mapb) * (m0*m0 - mamb*mamb) ) / (2. * m0 );
<a name="l00068"></a>00068   }
<a name="l00069"></a>00069 
<a name="l00070"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a671477c14e10e2963a94b975b22814dc">00070</a>   <span class="keywordtype">double</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a671477c14e10e2963a94b975b22814dc">q</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; ma, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; mb, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; x)<span class="keyword"> const </span>{
<a name="l00071"></a>00071     <span class="keywordtype">double</span> mapb = ma + mb;
<a name="l00072"></a>00072     <span class="keywordtype">double</span> mamb = ma - mb;
<a name="l00073"></a>00073 
<a name="l00074"></a>00074     <span class="keywordflow">return</span> sqrt ( (x*x - mapb*mapb) * (x*x - mamb*mamb) ) / (2. * x );
<a name="l00075"></a>00075   }
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 
<a name="l00078"></a>00078   <span class="comment">// compute part of the Blatt-Weisskopf barrier factor</span>
<a name="l00079"></a>00079   <span class="comment">//   BLprime = sqrt (F(q0)/F(q))</span>
<a name="l00080"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a55cfaf6ac0c1ad2693607bfac584254d">00080</a>   <span class="keywordtype">double</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a55cfaf6ac0c1ad2693607bfac584254d">F</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; p, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; d, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; spin)<span class="keyword"> const </span>{
<a name="l00081"></a>00081     <span class="keywordtype">double</span> retVal = 1;
<a name="l00082"></a>00082 
<a name="l00083"></a>00083     <span class="keywordflow">if</span> (spin == 0)
<a name="l00084"></a>00084       retVal = 1;
<a name="l00085"></a>00085     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (spin == 1)
<a name="l00086"></a>00086       retVal = 1 + p*p * d*d;
<a name="l00087"></a>00087     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (spin == 2) {
<a name="l00088"></a>00088       <span class="keywordtype">double</span> z = p*p * d*d;
<a name="l00089"></a>00089       retVal = (z-3.)*(z-3.) + 9*z;
<a name="l00090"></a>00090     }
<a name="l00091"></a>00091     <span class="keywordflow">return</span> retVal;
<a name="l00092"></a>00092   }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 
<a name="l00095"></a>00095   <span class="comment">// compute square of Blatt-Weisskopf barrier factor</span>
<a name="l00096"></a><a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#ad7e14362686c423d35266c4c59ced37a">00096</a>   <span class="keywordtype">double</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#ad7e14362686c423d35266c4c59ced37a">BLprime2</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>&amp; ma, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; mb, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; m0, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; x, <span class="keyword">const</span> <span class="keywordtype">double</span>&amp; d, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; spin)<span class="keyword"> const </span>{
<a name="l00097"></a>00097     <span class="comment">//  cout &lt;&lt; q0() &lt;&lt; &quot; &quot; &lt;&lt; q() &lt;&lt; &quot;\t&quot; &lt;&lt; F(q0()) &lt;&lt; &quot; &quot; &lt;&lt; F(q()) &lt;&lt; endl;</span>
<a name="l00098"></a>00098     <span class="keywordflow">return</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a55cfaf6ac0c1ad2693607bfac584254d">F</a>(<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a850157e4e3c2e35034294830b7831af3">q0</a>(ma, mb, m0),d,spin) / <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a55cfaf6ac0c1ad2693607bfac584254d">F</a>(<a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml#a671477c14e10e2963a94b975b22814dc">q</a>(ma, mb, x),d,spin);
<a name="l00099"></a>00099   }
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 };
<a name="l00102"></a>00102 
<a name="l00103"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml">00103</a> <span class="keyword">class </span><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml">WignerDStrategy</a> : <span class="keyword">public</span> <a class="code" href="../../d2/df2/classStrategy.xhtml" title="Functions to be used in FuntionTree.">Strategy</a> {
<a name="l00104"></a>00104 <span class="keyword">public</span>:
<a name="l00105"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab89231aa03c8201761d66c79c624cc72">00105</a>   <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab89231aa03c8201761d66c79c624cc72">WignerDStrategy</a>(<span class="keyword">const</span> std::string resonanceName):<a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a15ee726286d5fad903f87cca9c48e0dc">name</a>(resonanceName){
<a name="l00106"></a>00106     <span class="comment">//name = +resonanceName;</span>
<a name="l00107"></a>00107   }
<a name="l00108"></a>00108 
<a name="l00109"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a8d5e84224733a973b8f7b3a793c1fb04">00109</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> std::string <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a8d5e84224733a973b8f7b3a793c1fb04" title="Pure Virtual interface for streaming info about the strategy.">to_str</a>()<span class="keyword"> const </span>{
<a name="l00110"></a>00110     <span class="keywordflow">return</span> (<span class="stringliteral">&quot;WignerD of &quot;</span>+<a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a15ee726286d5fad903f87cca9c48e0dc">name</a>);
<a name="l00111"></a>00111   }
<a name="l00112"></a>00112 
<a name="l00113"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a7cbcce522e75d1744079cb42017fe67a">00113</a>   <span class="keyword">virtual</span> std::shared_ptr&lt;AbsParameter&gt; <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a7cbcce522e75d1744079cb42017fe67a" title="Pure Virtual interface for executing a strategy.">execute</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d9d/classParameterList.xhtml" title="Internal container representing a parameter list.">ParameterList</a>&amp; paras) {
<a name="l00114"></a>00114 
<a name="l00115"></a>00115     <span class="keywordtype">double</span> Gamma0, GammaV;
<a name="l00116"></a>00116     <span class="keywordtype">double</span> _m23 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m23&quot;</span>));
<a name="l00117"></a>00117     <span class="keywordtype">double</span> _m13 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m13&quot;</span>));
<a name="l00118"></a>00118     <span class="keywordtype">double</span> _m12 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m12&quot;</span>));
<a name="l00119"></a>00119     <span class="keywordtype">double</span> _M  = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;M&quot;</span>));
<a name="l00120"></a>00120     <span class="keywordtype">double</span> _m1 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m1&quot;</span>));
<a name="l00121"></a>00121     <span class="keywordtype">double</span> _m2 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m2&quot;</span>));
<a name="l00122"></a>00122     <span class="keywordtype">double</span> _m3 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;m3&quot;</span>));
<a name="l00123"></a>00123     <span class="comment">//double locmax_sq = Double_t(paras.GetParameterValue(&quot;mb_&quot;+name));</span>
<a name="l00124"></a>00124     <span class="comment">//double locmin_sq = Double_t(paras.GetParameterValue(&quot;mb_&quot;+name));</span>
<a name="l00125"></a>00125     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _subSysFlag = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;subSysFlag_&quot;</span>+<a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a15ee726286d5fad903f87cca9c48e0dc">name</a>));
<a name="l00126"></a>00126     <span class="keywordtype">double</span> _inSpin = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;inSpin_&quot;</span>+<a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a15ee726286d5fad903f87cca9c48e0dc">name</a>));
<a name="l00127"></a>00127     <span class="keywordtype">double</span> _outSpin1 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;outSpin1_&quot;</span>+<a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a15ee726286d5fad903f87cca9c48e0dc">name</a>));
<a name="l00128"></a>00128     <span class="keywordtype">double</span> _outSpin2 = Double_t(paras.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a99c664620aa97bc31d1defcf7ab4c927" title="Getter for parameter value.">GetParameterValue</a>(<span class="stringliteral">&quot;outSpin2_&quot;</span>+<a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a15ee726286d5fad903f87cca9c48e0dc">name</a>));
<a name="l00129"></a>00129 
<a name="l00130"></a>00130     <span class="keywordtype">double</span> locmin_sq, locmax_sq, beta;
<a name="l00131"></a>00131 
<a name="l00132"></a>00132     <span class="keywordflow">switch</span>(_subSysFlag){
<a name="l00133"></a>00133       <span class="keywordflow">case</span> 1:{ <span class="comment">//reso in m23</span>
<a name="l00134"></a>00134         locmin_sq = <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#aa0ce49471e4697791403215ca4ead729">s2min</a>(_m23*_m23,_M,_m1,_m2,_m3);
<a name="l00135"></a>00135         locmax_sq = <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab276cffd026c52f2f2d415499b0681bf">s2max</a>(_m23*_m23,_M,_m1,_m2,_m3);
<a name="l00136"></a>00136         beta=acos((2.*_m13*_m13-locmax_sq-locmin_sq)/(locmax_sq-locmin_sq));
<a name="l00137"></a>00137         <span class="keywordflow">break</span>;
<a name="l00138"></a>00138       }
<a name="l00139"></a>00139       <span class="keywordflow">case</span> 2:{ <span class="comment">//reso in m13</span>
<a name="l00140"></a>00140         locmin_sq = <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab067c53cf556812781dfdf46dc6d7c9b">s1min</a>(_m13*_m13,_M,_m1,_m2,_m3);
<a name="l00141"></a>00141         locmax_sq = <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a35b5c5e76f158d94b1e1a3ca3371830f">s1max</a>(_m13*_m13,_M,_m1,_m2,_m3);
<a name="l00142"></a>00142         beta=acos((2.*_m23*_m23-locmax_sq-locmin_sq)/(locmax_sq-locmin_sq));
<a name="l00143"></a>00143         <span class="keywordflow">break</span>;
<a name="l00144"></a>00144       }
<a name="l00145"></a>00145       <span class="keywordflow">case</span> 3:{ <span class="comment">//reso in m12</span>
<a name="l00146"></a>00146         <span class="comment">//return 1;</span>
<a name="l00147"></a>00147         locmin_sq = <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#ab067c53cf556812781dfdf46dc6d7c9b">s1min</a>(_m12*_m12,_M,_m1,_m3,_m2);
<a name="l00148"></a>00148         locmax_sq = <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a35b5c5e76f158d94b1e1a3ca3371830f">s1max</a>(_m12*_m12,_M,_m1,_m3,_m2);
<a name="l00149"></a>00149         beta=acos((2.*_m23*_m23-locmax_sq-locmin_sq)/(locmax_sq-locmin_sq));
<a name="l00150"></a>00150         <span class="keywordflow">if</span>(beta!=beta) <span class="keywordflow">return</span> 1.;
<a name="l00151"></a>00151         <span class="keywordflow">break</span>;
<a name="l00152"></a>00152       }
<a name="l00153"></a>00153     }
<a name="l00154"></a>00154 
<a name="l00155"></a>00155     <span class="comment">//double locmin_sq = s2min(_y*_y), locmax_sq = s2max(_y*_y);</span>
<a name="l00156"></a>00156     <span class="comment">//if( _x*_x&gt;locmax_sq || _x*_x&lt;locmin_sq )</span>
<a name="l00157"></a>00157     <span class="comment">//  return 0.;</span>
<a name="l00158"></a>00158 
<a name="l00159"></a>00159     Spin j(_inSpin), m(_outSpin1), n(_outSpin2);
<a name="l00160"></a>00160     <span class="keywordflow">return</span> Wigner_d(j,m,n,beta);
<a name="l00161"></a>00161   }
<a name="l00162"></a>00162 
<a name="l00163"></a>00163 <span class="keyword">protected</span>:
<a name="l00164"></a><a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a15ee726286d5fad903f87cca9c48e0dc">00164</a>   std::string <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml#a15ee726286d5fad903f87cca9c48e0dc">name</a>;
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 };
<a name="l00167"></a>00167 
<a name="l00168"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml">00168</a> <span class="keyword">class </span><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml">AmpSumTree</a> {
<a name="l00169"></a>00169 
<a name="l00170"></a>00170 <span class="keyword">public</span>:
<a name="l00172"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a495d110f1699b25ce7e06c835c370e58">00172</a>   <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a495d110f1699b25ce7e06c835c370e58" title="Default Constructor (0x0)">AmpSumTree</a>(<span class="keyword">const</span> <span class="keywordtype">double</span> inM, <span class="keyword">const</span> <span class="keywordtype">double</span> inBr, <span class="keyword">const</span> <span class="keywordtype">double</span> in1
<a name="l00173"></a>00173       ,<span class="keyword">const</span> <span class="keywordtype">double</span> in2, <span class="keyword">const</span> <span class="keywordtype">double</span> in3, <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml" title="This class is used to load an Amplitude configuration provided in an XML file.">AmplitudeSetup</a> ini)
<a name="l00174"></a>00174   : <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>(inM), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#aa32292fe4012e5b9d086532fdfe59f22">Br</a>(inBr), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>(in1), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>(in2), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>(in3),<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac024c54b4e8c7de8783a292c129ca9fd">PI</a>(3.14159),
<a name="l00175"></a>00175     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2cf7fdf016d8b54d3707f62ac3d9a5ff">m23_sq_min</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)),
<a name="l00176"></a>00176     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a8f4813d0e564a9f9a305deac1ca17ae0">m23_sq_max</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>)*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>)),
<a name="l00177"></a>00177     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab733dd2e894519fd5f6a6205469d9c4b">m13_sq_min</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)),
<a name="l00178"></a>00178     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a524da16d045686152fdca9a23764453d">m13_sq_max</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>)*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>)),
<a name="l00179"></a>00179     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a540540dde622f4743686a6b1f16de98d">m12_sq_min</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>)*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>)),
<a name="l00180"></a>00180     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a9c3dd836c1ea586d29634f6bff68d4bd">m12_sq_max</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)),
<a name="l00181"></a>00181     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a5236481934874728e08b72cc2ee14a57">m23_min</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a7193db75def84024e66f46cb3c7d84a7">m23_max</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>)),
<a name="l00182"></a>00182     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0fdbf7e231cf241c2181ef1ffb87d79b">m13_min</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a318d9074a8a38e938f0d43e21de540f6">m13_max</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>)),
<a name="l00183"></a>00183     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#acc0a936d7fc8e74f096dc912691251f5">m12_min</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>)), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac49fee819d4b25261df3c75649e24cd2">m12_max</a>((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)),
<a name="l00184"></a>00184     m23(std::shared_ptr&lt;<a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>&gt;(new <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>(<span class="stringliteral">&quot;m23&quot;</span>, 1., <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a5236481934874728e08b72cc2ee14a57">m23_min</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a7193db75def84024e66f46cb3c7d84a7">m23_max</a>))), <span class="comment">//ma</span>
<a name="l00185"></a>00185     m13(std::shared_ptr&lt;<a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>&gt;(new <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>(<span class="stringliteral">&quot;m13&quot;</span>, 1., <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0fdbf7e231cf241c2181ef1ffb87d79b">m13_min</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a318d9074a8a38e938f0d43e21de540f6">m13_max</a>))), <span class="comment">//mb</span>
<a name="l00186"></a>00186     m12(std::shared_ptr&lt;<a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>&gt;(new <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>(<span class="stringliteral">&quot;m12&quot;</span>, 1., <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#acc0a936d7fc8e74f096dc912691251f5">m12_min</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac49fee819d4b25261df3c75649e24cd2">m12_max</a>))), <span class="comment">//mc</span>
<a name="l00187"></a>00187     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a962eb69aee576ec55bafecb6eb41a09c">x</a>(std::shared_ptr&lt;<a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>&gt;(new <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>(<span class="stringliteral">&quot;x&quot;</span>, 0.))),
<a name="l00188"></a>00188     totAmp(<span class="stringliteral">&quot;relBWsumAmplitude&quot;</span>, <span class="stringliteral">&quot;totAmp&quot;</span>){
<a name="l00189"></a>00189 
<a name="l00190"></a>00190     <span class="comment">//AmpSumOfAmplitudes totAmp23(&quot;rbwAmp23&quot;, &quot;totAmp&quot;);</span>
<a name="l00191"></a>00191     <span class="comment">//------------Setup Tree---------------------</span>
<a name="l00192"></a>00192     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a> = std::shared_ptr&lt;FunctionTree&gt;(<span class="keyword">new</span> <a class="code" href="../../db/d4e/classFunctionTree.xhtml" title="FunctionTree for the actual Optimization.">FunctionTree</a>());
<a name="l00193"></a>00193 
<a name="l00194"></a>00194     <span class="comment">//----Strategies needed</span>
<a name="l00195"></a>00195     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a22a10b3a71b3f2c3e0fd404043f348e3">rbwStrat</a> = std::shared_ptr&lt;BreitWignerStrategy&gt;(<span class="keyword">new</span> <a class="code" href="../../de/d2e/classBreitWignerStrategy.xhtml">BreitWignerStrategy</a>());
<a name="l00196"></a>00196     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ae981fbeb163e062a607079bb1998862a">angdStrat</a> = std::shared_ptr&lt;WignerDStrategy&gt;(<span class="keyword">new</span> <a class="code" href="../../d8/d77/classWignerDStrategy.xhtml">WignerDStrategy</a>());
<a name="l00197"></a>00197     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab455abc5b53229a1d99ebc5e32bfaa20">multStrat</a> = std::shared_ptr&lt;MultAll&gt;(<span class="keyword">new</span> <a class="code" href="../../dc/dfa/classMultAll.xhtml">MultAll</a>());
<a name="l00198"></a>00198     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ae5b5f66b71fcf1bcf6a64f7d38d36beb">addStrat</a> = std::shared_ptr&lt;AddAll&gt;(<span class="keyword">new</span> <a class="code" href="../../d9/db9/classAddAll.xhtml">AddAll</a>());
<a name="l00199"></a>00199 
<a name="l00200"></a>00200     <span class="comment">//----Add Nodes</span>
<a name="l00201"></a>00201     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createHead(<span class="stringliteral">&quot;Amplitude&quot;</span>, addStrat); <span class="comment">//A=Sum{Resos}</span>
<a name="l00202"></a>00202 
<a name="l00203"></a>00203     <span class="comment">//----Parameters needed</span>
<a name="l00204"></a>00204     <span class="comment">//unsigned int numReso = ini.getResonances().size();</span>
<a name="l00205"></a>00205     <span class="keywordflow">for</span>(std::vector&lt;Resonance&gt;::iterator reso=ini.<a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a75045bb7b79b7b315069e6f0267873a4">getResonances</a>().begin(); reso!=ini.<a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a75045bb7b79b7b315069e6f0267873a4">getResonances</a>().end(); reso++){
<a name="l00206"></a>00206       <a class="code" href="../../d6/d5b/structResonance.xhtml">Resonance</a> tmp = (*reso);
<a name="l00207"></a>00207       <span class="comment">//setup RooVars</span>
<a name="l00208"></a>00208       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>.push_back( std::shared_ptr&lt;DoubleParameter&gt; (<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>((<span class="stringliteral">&quot;m_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>), tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9de5ccd6d828375f6619356f188bdbf">m_mass</a>, tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#ae58216b62a7b73ee275c228dc168d8e6">m_mass_min</a>, tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a10b762dd6be3a75ef2dbc7db8ce0df82">m_mass_max</a>) ) );
<a name="l00209"></a>00209       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a69055935fac9d4ade6677aa1656cf914">qr</a>.push_back( std::shared_ptr&lt;DoubleParameter&gt; (<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>((<span class="stringliteral">&quot;q_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>), tmp.m_breakup_mom) ) );
<a name="l00210"></a>00210       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac8ac66a41c54effb8560f48382bac312">gr</a>.push_back( std::shared_ptr&lt;DoubleParameter&gt; (<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>((<span class="stringliteral">&quot;g_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>), tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6a164223523da9b82f05dfe412bf7d85">m_width</a>, tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a96cd124336b15b78a2da80667f754c16">m_width_min</a>, tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#aae6f37d58ee8ea168b28fff6db5065ff">m_width_max</a>) ) );
<a name="l00211"></a>00211       std::complex&lt;double&gt; tmpintens = std::polar (tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a924fdc23c262d0536bb1c0aafcf167d9">m_strength</a>, tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a9979c547069b4a452c276a63da896a72">m_phase</a>);
<a name="l00212"></a>00212       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>.push_back( std::shared_ptr&lt;ComplexParameter&gt; (<span class="keyword">new</span> <a class="code" href="../../d5/d65/classComplexParameter.xhtml">ComplexParameter</a>((<span class="stringliteral">&quot;r_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>), tmpintens.real(),tmpintens.imag()) ) );
<a name="l00213"></a>00213       <span class="comment">//phir.push_back( std::shared_ptr&lt;DoubleParameter&gt; (new DoubleParameter((&quot;phi_{&quot;+tmp.m_name+&quot;}&quot;), tmp.m_phase) ) );</span>
<a name="l00214"></a>00214 
<a name="l00215"></a>00215       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">aj</a>.push_back( std::shared_ptr&lt;DoubleParameter&gt; (<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>((<span class="stringliteral">&quot;j_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>), tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a>) ) );
<a name="l00216"></a>00216       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2e01d1195df9e89570cd865f2aab48fa">am</a>.push_back( std::shared_ptr&lt;DoubleParameter&gt; (<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>((<span class="stringliteral">&quot;m_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>), tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9adb4ca4e03de9163a175be1c322685">m_m</a>) ) );
<a name="l00217"></a>00217       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1aeda652350b491e6bf926434274e914">an</a>.push_back( std::shared_ptr&lt;DoubleParameter&gt; (<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>((<span class="stringliteral">&quot;n_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>), tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6fddfde0c0200d51fd25496d17beb44d">m_n</a>) ) );
<a name="l00218"></a>00218 
<a name="l00219"></a>00219       <span class="comment">//----Add Nodes</span>
<a name="l00220"></a>00220       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> last = <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>.size()-1;
<a name="l00221"></a>00221       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createNode(<span class="stringliteral">&quot;Reso_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, multStrat, <span class="stringliteral">&quot;Amplitude&quot;</span>); <span class="comment">//Reso=BW*c*AD</span>
<a name="l00222"></a>00222       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createNode(<span class="stringliteral">&quot;RelBW_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, rbwStrat, <span class="stringliteral">&quot;Reso_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//BW</span>
<a name="l00223"></a>00223       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;Intens_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>[last], <span class="stringliteral">&quot;Reso_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//c</span>
<a name="l00224"></a>00224       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createNode(<span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, angdStrat, <span class="stringliteral">&quot;Reso_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//AD</span>
<a name="l00225"></a>00225       <span class="comment">//BW Par</span>
<a name="l00226"></a>00226       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;m0_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[last], <span class="stringliteral">&quot;RelBW_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//m0</span>
<a name="l00227"></a>00227       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;x_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a962eb69aee576ec55bafecb6eb41a09c">x</a>, <span class="stringliteral">&quot;RelBW_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//x</span>
<a name="l00228"></a>00228       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;ma&quot;</span>, m23, <span class="stringliteral">&quot;RelBW_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//ma</span>
<a name="l00229"></a>00229       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;mb&quot;</span>, m13, <span class="stringliteral">&quot;RelBW_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//mb</span>
<a name="l00230"></a>00230       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;spin_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">aj</a>[last], <span class="stringliteral">&quot;RelBW_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//spin</span>
<a name="l00231"></a>00231       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;d_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a69055935fac9d4ade6677aa1656cf914">qr</a>[last], <span class="stringliteral">&quot;RelBW_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//d</span>
<a name="l00232"></a>00232       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;resWidth_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac8ac66a41c54effb8560f48382bac312">gr</a>[last], <span class="stringliteral">&quot;RelBW_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//resWidth</span>
<a name="l00233"></a>00233       <span class="comment">//AD Par</span>
<a name="l00234"></a>00234       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;m23&quot;</span>, m23, <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//ma</span>
<a name="l00235"></a>00235       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;m13&quot;</span>, m13, <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//mb</span>
<a name="l00236"></a>00236       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;m12&quot;</span>, m12, <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//mc</span>
<a name="l00237"></a>00237       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;M&quot;</span>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>, <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//M</span>
<a name="l00238"></a>00238       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;m1&quot;</span>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>, <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//m1</span>
<a name="l00239"></a>00239       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;m2&quot;</span>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>, <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//m2</span>
<a name="l00240"></a>00240       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;m3&quot;</span>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>, <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//m3</span>
<a name="l00241"></a>00241      <span class="comment">// unsigned int _subSysFlag = Double_t(paras.GetParameterValue(&quot;subSysFlag_&quot;+name));</span>
<a name="l00242"></a>00242       <span class="comment">//myTree-&gt;createLeaf(&quot;spin_&quot;+tmp.m_name, aj[last], &quot;AngD_&quot;+tmp.m_name); //subSysFlag</span>
<a name="l00243"></a>00243       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;spin_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">aj</a>[last], <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//spin</span>
<a name="l00244"></a>00244       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;m_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2e01d1195df9e89570cd865f2aab48fa">am</a>[last], <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//OutSpin 1</span>
<a name="l00245"></a>00245       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>-&gt;createLeaf(<span class="stringliteral">&quot;n_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1aeda652350b491e6bf926434274e914">an</a>[last], <span class="stringliteral">&quot;AngD_&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>); <span class="comment">//OutSpin 2</span>
<a name="l00246"></a>00246 
<a name="l00247"></a>00247       <span class="keywordflow">if</span>(tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">m_daugtherA</a>==2 &amp;&amp; tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">m_daugtherB</a>==3){
<a name="l00248"></a>00248         std::shared_ptr&lt;AmpRelBreitWignerRes&gt; tmpbw(<span class="keyword">new</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml">AmpRelBreitWignerRes</a>(tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>.c_str(),
<a name="l00249"></a>00249             tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>.c_str(), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6d6c712b7a757247174bb8bb481bc18e">ma</a>, *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac8ac66a41c54effb8560f48382bac312">gr</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a69055935fac9d4ade6677aa1656cf914">qr</a>[last], 1, tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a>) );
<a name="l00250"></a>00250         tmpbw-&gt;setDecayMasses(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>);
<a name="l00251"></a>00251         rbw.push_back(tmpbw);
<a name="l00252"></a>00252         angd.push_back( std::shared_ptr&lt;AmpWigner&gt; (<span class="keyword">new</span> <a class="code" href="../../d4/d38/classAmpWigner.xhtml">AmpWigner</a>((<span class="stringliteral">&quot;a_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>).c_str(), (<span class="stringliteral">&quot;a_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>).c_str(),
<a name="l00253"></a>00253             <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0215e56444949fbcdc325657d1f0110f">mc</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6d6c712b7a757247174bb8bb481bc18e">ma</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53a0b4a4b774570447504d851789622d">mb</a>, 1, *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">aj</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2e01d1195df9e89570cd865f2aab48fa">am</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1aeda652350b491e6bf926434274e914">an</a>[last]) ) );
<a name="l00254"></a>00254         totAmp.addBW(rbw.at(last), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>.at(last), phir.at(last), angd.at(last));
<a name="l00255"></a>00255       }<span class="keywordflow">else</span> <span class="keywordflow">if</span>(tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">m_daugtherA</a>==1 &amp;&amp; tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">m_daugtherB</a>==3){
<a name="l00256"></a>00256         std::shared_ptr&lt;AmpRelBreitWignerRes&gt; tmpbw(<span class="keyword">new</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml">AmpRelBreitWignerRes</a>(tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>.c_str(),
<a name="l00257"></a>00257             tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>.c_str(), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53a0b4a4b774570447504d851789622d">mb</a>, *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac8ac66a41c54effb8560f48382bac312">gr</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a69055935fac9d4ade6677aa1656cf914">qr</a>[last], 2, tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a>) );
<a name="l00258"></a>00258         tmpbw-&gt;setDecayMasses(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>);
<a name="l00259"></a>00259         rbw.push_back(tmpbw);
<a name="l00260"></a>00260         angd.push_back( std::shared_ptr&lt;AmpWigner&gt; (<span class="keyword">new</span> <a class="code" href="../../d4/d38/classAmpWigner.xhtml">AmpWigner</a>((<span class="stringliteral">&quot;a_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>).c_str(), (<span class="stringliteral">&quot;a_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>).c_str(),
<a name="l00261"></a>00261             <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0215e56444949fbcdc325657d1f0110f">mc</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6d6c712b7a757247174bb8bb481bc18e">ma</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53a0b4a4b774570447504d851789622d">mb</a>, 2, *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">aj</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2e01d1195df9e89570cd865f2aab48fa">am</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1aeda652350b491e6bf926434274e914">an</a>[last]) ) );
<a name="l00262"></a>00262         totAmp.addBW(rbw.at(last), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>.at(last), phir.at(last), angd.at(last));
<a name="l00263"></a>00263       }<span class="keywordflow">else</span> <span class="keywordflow">if</span>(tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">m_daugtherA</a>==1 &amp;&amp; tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">m_daugtherB</a>==2){
<a name="l00264"></a>00264         std::shared_ptr&lt;AmpRelBreitWignerRes&gt; tmpbw(<span class="keyword">new</span> <a class="code" href="../../d5/dcf/classAmpRelBreitWignerRes.xhtml">AmpRelBreitWignerRes</a>(tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>.c_str(),
<a name="l00265"></a>00265             tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>.c_str(), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0215e56444949fbcdc325657d1f0110f">mc</a>, *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac8ac66a41c54effb8560f48382bac312">gr</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a69055935fac9d4ade6677aa1656cf914">qr</a>[last], 3, tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a>) );
<a name="l00266"></a>00266         tmpbw-&gt;setDecayMasses(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>);
<a name="l00267"></a>00267         rbw.push_back(tmpbw);
<a name="l00268"></a>00268         angd.push_back( std::shared_ptr&lt;AmpWigner&gt; (<span class="keyword">new</span> <a class="code" href="../../d4/d38/classAmpWigner.xhtml">AmpWigner</a>((<span class="stringliteral">&quot;a_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>).c_str(), (<span class="stringliteral">&quot;a_{&quot;</span>+tmp.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>+<span class="stringliteral">&quot;}&quot;</span>).c_str(),
<a name="l00269"></a>00269             <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0215e56444949fbcdc325657d1f0110f">mc</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6d6c712b7a757247174bb8bb481bc18e">ma</a>, <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53a0b4a4b774570447504d851789622d">mb</a>, 3, *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">aj</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2e01d1195df9e89570cd865f2aab48fa">am</a>[last], *<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1aeda652350b491e6bf926434274e914">an</a>[last]) ) );
<a name="l00270"></a>00270         totAmp.addBW(rbw.at(last), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>.at(last), phir.at(last), angd.at(last));
<a name="l00271"></a>00271       }<span class="keywordflow">else</span>{ <span class="comment">//ignore resonance</span>
<a name="l00272"></a>00272           <span class="comment">//std::cout &lt;&lt; &quot;Problem&quot; &lt;&lt; std::cout;</span>
<a name="l00273"></a>00273           <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>.pop_back();
<a name="l00274"></a>00274           <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a69055935fac9d4ade6677aa1656cf914">qr</a>.pop_back();
<a name="l00275"></a>00275           <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac8ac66a41c54effb8560f48382bac312">gr</a>.pop_back();
<a name="l00276"></a>00276           <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>.pop_back();
<a name="l00277"></a>00277           phir.pop_back();
<a name="l00278"></a>00278           <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">aj</a>.pop_back();
<a name="l00279"></a>00279           <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2e01d1195df9e89570cd865f2aab48fa">am</a>.pop_back();
<a name="l00280"></a>00280           <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1aeda652350b491e6bf926434274e914">an</a>.pop_back();
<a name="l00281"></a>00281       }
<a name="l00282"></a>00282 
<a name="l00283"></a>00283       <span class="comment">//rbw.at(last).printName(std::cout);</span>
<a name="l00284"></a>00284       <span class="comment">//angd.at(last).printName(std::cout);</span>
<a name="l00285"></a>00285     }
<a name="l00286"></a>00286 
<a name="l00287"></a>00287     std::cout &lt;&lt; <span class="stringliteral">&quot;completed setup&quot;</span> &lt;&lt; std::endl;
<a name="l00288"></a>00288   }
<a name="l00289"></a>00289 
<a name="l00290"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a845d0ef121d5efcc4c1eedda49c78e41">00290</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a845d0ef121d5efcc4c1eedda49c78e41">integral</a>(<a class="code" href="../../d1/d9d/classParameterList.xhtml" title="Internal container representing a parameter list.">ParameterList</a>&amp; par){
<a name="l00291"></a>00291     <span class="comment">/*double integral = 1;</span>
<a name="l00292"></a>00292 <span class="comment">    unsigned int nSteps = 1000000;</span>
<a name="l00293"></a>00293 <span class="comment">    double stepa = (ma.getMax()-ma.getMin())/(double)nSteps;</span>
<a name="l00294"></a>00294 <span class="comment">    double stepb = (mb.getMax()-mb.getMin())/(double)nSteps;</span>
<a name="l00295"></a>00295 <span class="comment"></span>
<a name="l00296"></a>00296 <span class="comment">    //TODO: better approximation</span>
<a name="l00297"></a>00297 <span class="comment"></span>
<a name="l00298"></a>00298 <span class="comment">    for(unsigned int k=1; k&lt;nSteps; k++){</span>
<a name="l00299"></a>00299 <span class="comment">      integral += step*intensity((ma.getMin()+k*step), par);</span>
<a name="l00300"></a>00300 <span class="comment">    }*/</span>
<a name="l00301"></a>00301 
<a name="l00302"></a>00302     <span class="keywordflow">return</span> 1;
<a name="l00303"></a>00303     <span class="comment">//return totAmp.getNorm();//integral;</span>
<a name="l00304"></a>00304   }
<a name="l00305"></a>00305 
<a name="l00306"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac05db27b9ea7d4c984f4dcc89948316f">00306</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac05db27b9ea7d4c984f4dcc89948316f">volume</a>(){
<a name="l00307"></a>00307     <span class="keywordflow">return</span> -1.*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2cf7fdf016d8b54d3707f62ac3d9a5ff">m23_sq_min</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a8f4813d0e564a9f9a305deac1ca17ae0">m23_sq_max</a>)*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab733dd2e894519fd5f6a6205469d9c4b">m13_sq_min</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a524da16d045686152fdca9a23764453d">m13_sq_max</a>)*(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a540540dde622f4743686a6b1f16de98d">m12_sq_min</a>-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a9c3dd836c1ea586d29634f6bff68d4bd">m12_sq_max</a>);
<a name="l00308"></a>00308   }
<a name="l00309"></a>00309 
<a name="l00310"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab366c076853e8ac26dba37ad3d8b12dd">00310</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab366c076853e8ac26dba37ad3d8b12dd">intensity</a>(std::vector&lt;double&gt;&amp; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a962eb69aee576ec55bafecb6eb41a09c">x</a>, <a class="code" href="../../d1/d9d/classParameterList.xhtml" title="Internal container representing a parameter list.">ParameterList</a>&amp; par){
<a name="l00311"></a>00311     <span class="comment">//TODO: check x exception</span>
<a name="l00312"></a>00312     <span class="keywordflow">if</span>(x.size()!=3) <span class="keywordflow">return</span> 0;
<a name="l00313"></a>00313 
<a name="l00314"></a>00314     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6d6c712b7a757247174bb8bb481bc18e">ma</a>.setVal(x[0]); <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53a0b4a4b774570447504d851789622d">mb</a>.setVal(x[1]); <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0215e56444949fbcdc325657d1f0110f">mc</a>.setVal(x[2]);
<a name="l00315"></a>00315 
<a name="l00316"></a>00316     <span class="keywordflow">if</span>( par.<a class="code" href="../../d1/d9d/classParameterList.xhtml#aa626799b903b16e7f6f29f918c626f9e" title="Getter for number of double parameter.">GetNDouble</a>()&gt;<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>.size() ){
<a name="l00317"></a>00317         std::cout &lt;&lt; <span class="stringliteral">&quot;Error: Parameterlist doesn&#39;t match model!! &quot;</span> &lt;&lt; par.<a class="code" href="../../d1/d9d/classParameterList.xhtml#aa626799b903b16e7f6f29f918c626f9e" title="Getter for number of double parameter.">GetNDouble</a>() &lt;&lt; std::endl; <span class="comment">//TODO: exception</span>
<a name="l00318"></a>00318       <span class="keywordflow">return</span> 0;
<a name="l00319"></a>00319     }
<a name="l00320"></a>00320 
<a name="l00321"></a>00321     <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>.size(); i++){
<a name="l00322"></a>00322       <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[i]-&gt;setVal(par.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a60d49f17af8b63f4f153f9d420c3bcbb" title="Getter for floating point parameter.">GetDoubleParameter</a>(i)-&gt;GetValue());
<a name="l00323"></a>00323       <span class="comment">//phir[i]-&gt;setVal(par.GetDoubleParameter(2*i+1).GetValue());</span>
<a name="l00324"></a>00324     }
<a name="l00325"></a>00325     <span class="comment">//rr[rr.size()-1]-&gt;setVal(par.GetDoubleParameter(2*(rr.size()-1)).GetValue());</span>
<a name="l00326"></a>00326 
<a name="l00327"></a>00327     <span class="keywordtype">double</span> AMPpdf = totAmp.evaluate();
<a name="l00328"></a>00328 
<a name="l00329"></a>00329     <span class="keywordflow">if</span>(AMPpdf!=AMPpdf){
<a name="l00330"></a>00330         <span class="comment">//std::cout &lt;&lt; &quot;Error: Intensity is not a number!!&quot; &lt;&lt; std::endl; //TODO: exception</span>
<a name="l00331"></a>00331       <span class="keywordflow">return</span> 0;
<a name="l00332"></a>00332     }
<a name="l00333"></a>00333 
<a name="l00334"></a>00334     <span class="keywordflow">return</span> AMPpdf;
<a name="l00335"></a>00335   }
<a name="l00336"></a>00336 
<a name="l00337"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a98936389d5bb47cea63e32866d3f7a1b">00337</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a98936389d5bb47cea63e32866d3f7a1b">fillStartParVec</a>(<a class="code" href="../../d1/d9d/classParameterList.xhtml" title="Internal container representing a parameter list.">ParameterList</a>&amp; outPar){
<a name="l00338"></a>00338     <span class="keywordflow">if</span>(outPar.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a3f27ba4154586dfb2d4c4c30d576219c" title="Getter for number of parameter.">GetNParameter</a>())
<a name="l00339"></a>00339       <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">//already filled, TODO: exception?</span>
<a name="l00340"></a>00340 
<a name="l00341"></a>00341     <span class="comment">//add strength and phases of the used amplitudes</span>
<a name="l00342"></a>00342     <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>.size();i++){
<a name="l00343"></a>00343 
<a name="l00344"></a>00344 
<a name="l00345"></a>00345       <span class="keywordflow">if</span>(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>[i]-&gt;hasError()) <span class="comment">//TODO: check bounds</span>
<a name="l00346"></a>00346         outPar.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a3574caceee6e2701f25327d35f7bce40" title="Add parameter via abstract pointer.">AddParameter</a>(std::shared_ptr&lt;DoubleParameter&gt;(<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[i]-&gt;GetName(),<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[i]-&gt;getVal(), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[i]-&gt;getMin(), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[i]-&gt;getMax(), <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[i]-&gt;getError())));
<a name="l00347"></a>00347       <span class="keywordflow">else</span>
<a name="l00348"></a>00348         outPar.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a3574caceee6e2701f25327d35f7bce40" title="Add parameter via abstract pointer.">AddParameter</a>(std::shared_ptr&lt;DoubleParameter&gt;(<span class="keyword">new</span> <a class="code" href="../../dd/d8d/classDoubleParameter.xhtml" title="Implementations for internal parameter.">DoubleParameter</a>(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[i]-&gt;GetName(),<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>[i]-&gt;getVal(), 0.1)));
<a name="l00349"></a>00349 
<a name="l00350"></a>00350     }
<a name="l00351"></a>00351 
<a name="l00352"></a>00352     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00353"></a>00353   }
<a name="l00354"></a>00354 
<a name="l00355"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6684b72f68f3a9e7bbd7991c586b8adb">00355</a>   <span class="keyword">virtual</span> std::shared_ptr&lt;FunctionTree&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6684b72f68f3a9e7bbd7991c586b8adb">functionTree</a>(<a class="code" href="../../d1/d9d/classParameterList.xhtml" title="Internal container representing a parameter list.">ParameterList</a>&amp; outPar) {
<a name="l00356"></a>00356     <span class="keywordflow">if</span>(outPar.<a class="code" href="../../d1/d9d/classParameterList.xhtml#a3f27ba4154586dfb2d4c4c30d576219c" title="Getter for number of parameter.">GetNParameter</a>()&gt;0) <span class="keywordflow">return</span> NULL;
<a name="l00357"></a>00357     <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a98936389d5bb47cea63e32866d3f7a1b">fillStartParVec</a>(outPar);
<a name="l00358"></a>00358 
<a name="l00359"></a>00359     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>;
<a name="l00360"></a>00360   }
<a name="l00361"></a>00361 
<a name="l00363"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a7daa367883de970dd5c69117b637c351">00363</a>   <span class="keyword">virtual</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a7daa367883de970dd5c69117b637c351">~AmpSumTree</a>(){
<a name="l00364"></a>00364 
<a name="l00365"></a>00365   }
<a name="l00366"></a>00366 
<a name="l00367"></a>00367  <span class="keyword">protected</span>:
<a name="l00368"></a>00368 <span class="comment">//constants</span>
<a name="l00369"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">00369</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>; <span class="comment">// GeV/c² (J/psi+)</span>
<a name="l00370"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#aa32292fe4012e5b9d086532fdfe59f22">00370</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#aa32292fe4012e5b9d086532fdfe59f22">Br</a>; <span class="comment">// GeV/c² (width)</span>
<a name="l00371"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">00371</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>; <span class="comment">// GeV/c² (gamma)</span>
<a name="l00372"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">00372</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>; <span class="comment">// GeV/c² (pi)</span>
<a name="l00373"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">00373</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>; <span class="comment">// GeV/c² (pi)</span>
<a name="l00374"></a>00374   <span class="comment">//const Double_t c = 299792458.; // m/s</span>
<a name="l00375"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac024c54b4e8c7de8783a292c129ca9fd">00375</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac024c54b4e8c7de8783a292c129ca9fd">PI</a>; <span class="comment">// m/s</span>
<a name="l00376"></a>00376 
<a name="l00377"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2cf7fdf016d8b54d3707f62ac3d9a5ff">00377</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2cf7fdf016d8b54d3707f62ac3d9a5ff">m23_sq_min</a>;
<a name="l00378"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a8f4813d0e564a9f9a305deac1ca17ae0">00378</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a8f4813d0e564a9f9a305deac1ca17ae0">m23_sq_max</a>;
<a name="l00379"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab733dd2e894519fd5f6a6205469d9c4b">00379</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab733dd2e894519fd5f6a6205469d9c4b">m13_sq_min</a>;
<a name="l00380"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a524da16d045686152fdca9a23764453d">00380</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a524da16d045686152fdca9a23764453d">m13_sq_max</a>;
<a name="l00381"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a540540dde622f4743686a6b1f16de98d">00381</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a540540dde622f4743686a6b1f16de98d">m12_sq_min</a>;
<a name="l00382"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a9c3dd836c1ea586d29634f6bff68d4bd">00382</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a9c3dd836c1ea586d29634f6bff68d4bd">m12_sq_max</a>;
<a name="l00383"></a>00383 
<a name="l00384"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a5236481934874728e08b72cc2ee14a57">00384</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a5236481934874728e08b72cc2ee14a57">m23_min</a>;
<a name="l00385"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a7193db75def84024e66f46cb3c7d84a7">00385</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a7193db75def84024e66f46cb3c7d84a7">m23_max</a>;
<a name="l00386"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0fdbf7e231cf241c2181ef1ffb87d79b">00386</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0fdbf7e231cf241c2181ef1ffb87d79b">m13_min</a>;
<a name="l00387"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a318d9074a8a38e938f0d43e21de540f6">00387</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a318d9074a8a38e938f0d43e21de540f6">m13_max</a>;
<a name="l00388"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#acc0a936d7fc8e74f096dc912691251f5">00388</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#acc0a936d7fc8e74f096dc912691251f5">m12_min</a>;
<a name="l00389"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac49fee819d4b25261df3c75649e24cd2">00389</a>   <span class="keyword">const</span> Double_t <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac49fee819d4b25261df3c75649e24cd2">m12_max</a>;
<a name="l00390"></a>00390 
<a name="l00391"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6d6c712b7a757247174bb8bb481bc18e">00391</a>   std::shared_ptr&lt;DoubleParameter&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6d6c712b7a757247174bb8bb481bc18e">ma</a>;
<a name="l00392"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53a0b4a4b774570447504d851789622d">00392</a>   std::shared_ptr&lt;DoubleParameter&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53a0b4a4b774570447504d851789622d">mb</a>;
<a name="l00393"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0215e56444949fbcdc325657d1f0110f">00393</a>   std::shared_ptr&lt;DoubleParameter&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a0215e56444949fbcdc325657d1f0110f">mc</a>;
<a name="l00394"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a962eb69aee576ec55bafecb6eb41a09c">00394</a>   std::shared_ptr&lt;DoubleParameter&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a962eb69aee576ec55bafecb6eb41a09c">x</a>;
<a name="l00395"></a>00395 
<a name="l00396"></a>00396   <span class="comment">//AmpSumOfAmplitudes totAmp;</span>
<a name="l00397"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">00397</a>   std::shared_ptr&lt;FunctionTree&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac14363ba1477becace1a27feeb2c90e5">myTree</a>;
<a name="l00398"></a>00398 
<a name="l00399"></a>00399   <span class="comment">//Resonance Variables</span>
<a name="l00400"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">00400</a>   std::vector&lt;std::shared_ptr&lt;DoubleParameter&gt; &gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2c4e3bd073fefcac39107e18f8291ff6">mr</a>;
<a name="l00401"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a69055935fac9d4ade6677aa1656cf914">00401</a>   std::vector&lt;std::shared_ptr&lt;DoubleParameter&gt; &gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a69055935fac9d4ade6677aa1656cf914">qr</a>;
<a name="l00402"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac8ac66a41c54effb8560f48382bac312">00402</a>   std::vector&lt;std::shared_ptr&lt;DoubleParameter&gt; &gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ac8ac66a41c54effb8560f48382bac312">gr</a>;
<a name="l00403"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">00403</a>   std::vector&lt;std::shared_ptr&lt;ComplexParameter&gt; &gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a53316bbdc1c734c1df386a89f262d80e">rr</a>;
<a name="l00404"></a>00404   <span class="comment">//std::vector&lt;std::shared_ptr&lt;DoubleParameter&gt; &gt; phir;</span>
<a name="l00405"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">00405</a>   std::vector&lt;std::shared_ptr&lt;DoubleParameter&gt; &gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2d9a62bbaa728e23072ee11d0da9d755">aj</a>;
<a name="l00406"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2e01d1195df9e89570cd865f2aab48fa">00406</a>   std::vector&lt;std::shared_ptr&lt;DoubleParameter&gt; &gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2e01d1195df9e89570cd865f2aab48fa">am</a>;
<a name="l00407"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1aeda652350b491e6bf926434274e914">00407</a>   std::vector&lt;std::shared_ptr&lt;DoubleParameter&gt; &gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1aeda652350b491e6bf926434274e914">an</a>;
<a name="l00408"></a>00408 
<a name="l00409"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a22a10b3a71b3f2c3e0fd404043f348e3">00409</a>   std::shared_ptr&lt;BreitWignerStrategy&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a22a10b3a71b3f2c3e0fd404043f348e3">rbwStrat</a>;
<a name="l00410"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ae981fbeb163e062a607079bb1998862a">00410</a>   std::shared_ptr&lt;WignerDStrategy&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ae981fbeb163e062a607079bb1998862a">angdStrat</a>;
<a name="l00411"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab455abc5b53229a1d99ebc5e32bfaa20">00411</a>   std::shared_ptr&lt;MultAll&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ab455abc5b53229a1d99ebc5e32bfaa20">multStrat</a>;
<a name="l00412"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ae5b5f66b71fcf1bcf6a64f7d38d36beb">00412</a>   std::shared_ptr&lt;AddAll&gt; <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ae5b5f66b71fcf1bcf6a64f7d38d36beb">addStrat</a>;
<a name="l00413"></a>00413 
<a name="l00414"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">00414</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(<span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a962eb69aee576ec55bafecb6eb41a09c">x</a>, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> z){
<a name="l00415"></a>00415     <span class="keywordflow">return</span> x*x+y*y+z*z-2.*x*y-2.*x*z-2.*y*z;
<a name="l00416"></a>00416   }
<a name="l00417"></a>00417 
<a name="l00418"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a3537ad6c978f187229e0fa52258a2a04">00418</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a3537ad6c978f187229e0fa52258a2a04">m13_sq_max_constr</a>(<span class="keywordtype">double</span> &amp;m23_sq){
<a name="l00419"></a>00419     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>+0.5/m23_sq*((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-m23_sq-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>)*(m23_sq-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)+sqrt(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(m23_sq,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>))*sqrt(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(m23_sq,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>,m3*m3)));
<a name="l00420"></a>00420   }
<a name="l00421"></a>00421 
<a name="l00422"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#af17f6773179c143b9593a50a25747fcc">00422</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#af17f6773179c143b9593a50a25747fcc">m13_sq_min_constr</a>(<span class="keywordtype">double</span> &amp;m23_sq){
<a name="l00423"></a>00423     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>+0.5/m23_sq*((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-m23_sq-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>)*(m23_sq-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)-sqrt(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(m23_sq,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>))*sqrt(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(m23_sq,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>,m3*m3)));
<a name="l00424"></a>00424   }
<a name="l00425"></a>00425 
<a name="l00426"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#aae4eda0add9cb771f39b08d2dd866bf1">00426</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#aae4eda0add9cb771f39b08d2dd866bf1">m23_sq_max_constr</a>(<span class="keywordtype">double</span> &amp;m13_sq){
<a name="l00427"></a>00427     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>+0.5/m13_sq*((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-m13_sq-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>)*(m13_sq-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)+sqrt(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(m13_sq,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>))*sqrt(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(m13_sq,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>,m3*m3)));
<a name="l00428"></a>00428   }
<a name="l00429"></a>00429 
<a name="l00430"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a87f4e654bd9277efec7a03b61796c27e">00430</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a87f4e654bd9277efec7a03b61796c27e">m23_sq_min_constr</a>(<span class="keywordtype">double</span> &amp;m13_sq){
<a name="l00431"></a>00431     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>+0.5/m13_sq*((<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>-m13_sq-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>)*(m13_sq-<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>+<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a00d339bff876589a56170d01a28661c5">m3</a>)-sqrt(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(m13_sq,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a99e4ff722608b751cf85cfad63e6f76e">M</a>,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a654790367dc7ba2f6643e1cbb1fdf82a">m2</a>))*sqrt(<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a36e6215dc68f415f9679ea25cde46878">lambda</a>(m13_sq,<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>*<a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a6835a7ef37beb1ea3fa5317f86139a1f">m1</a>,m3*m3)));
<a name="l00432"></a>00432   }
<a name="l00433"></a>00433 
<a name="l00434"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ae4269b8860645c495441ae6c737edd4c">00434</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#ae4269b8860645c495441ae6c737edd4c">mb_sq_max_constr</a>(<span class="keywordtype">double</span> &amp;ma_sq){
<a name="l00435"></a>00435     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a3537ad6c978f187229e0fa52258a2a04">m13_sq_max_constr</a>(ma_sq);
<a name="l00436"></a>00436   }
<a name="l00437"></a>00437 
<a name="l00438"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1a781ad393b9a86f9a7f28906c54655f">00438</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a1a781ad393b9a86f9a7f28906c54655f">mb_sq_min_constr</a>(<span class="keywordtype">double</span> &amp;ma_sq){
<a name="l00439"></a>00439     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#af17f6773179c143b9593a50a25747fcc">m13_sq_min_constr</a>(ma_sq);
<a name="l00440"></a>00440   }
<a name="l00441"></a>00441 
<a name="l00442"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a597d788d0e94494f257b48f239ea0803">00442</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a597d788d0e94494f257b48f239ea0803">ma_sq_max_constr</a>(<span class="keywordtype">double</span> &amp;mb_sq){
<a name="l00443"></a>00443     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#aae4eda0add9cb771f39b08d2dd866bf1">m23_sq_max_constr</a>(mb_sq);
<a name="l00444"></a>00444   }
<a name="l00445"></a>00445 
<a name="l00446"></a><a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2dd60f690ecfa3d4c27dd40da083e903">00446</a>   <span class="keywordtype">double</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a2dd60f690ecfa3d4c27dd40da083e903">ma_sq_min_constr</a>(<span class="keywordtype">double</span> &amp;mb_sq){
<a name="l00447"></a>00447     <span class="keywordflow">return</span> <a class="code" href="../../d8/dc4/classAmpSumTree.xhtml#a87f4e654bd9277efec7a03b61796c27e">m23_sq_min_constr</a>(mb_sq);
<a name="l00448"></a>00448   }
<a name="l00449"></a>00449 
<a name="l00450"></a>00450 
<a name="l00451"></a>00451  <span class="keyword">private</span>:
<a name="l00452"></a>00452 
<a name="l00453"></a>00453 
<a name="l00454"></a>00454 };
<a name="l00455"></a>00455 
<a name="l00456"></a>00456 <span class="preprocessor">#endif</span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Wed Dec 4 2013 for ComPWA by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.7.4 </small></address>
</body>
</html>
