<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ComPWA: AbsParameter Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ComPWA</div>
   <div id="projectbrief">Common Partial-Wave-Analysis Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">AbsParameter Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="AbsParameter" -->
<p><a class="el" href="../../d9/de5/classBase.xhtml">Base</a> class for internal parameter.  
 <a href="../../d7/d6a/classAbsParameter.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/def/AbsParameter_8hpp_source.xhtml">AbsParameter.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for AbsParameter:</div>
<div class="dyncontent">
<div class="center"><iframe src="../../d6/d66/classAbsParameter__inherit__graph.svg" width="710" height="1080" frameborder="0" scrolling="no"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="../../graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for AbsParameter:</div>
<div class="dyncontent">
<div class="center"><iframe src="../../d4/df8/classAbsParameter__coll__graph.svg" width="448" height="646" frameborder="0" scrolling="no"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="../../graph_legend.xhtml">legend</a>]</span></center></div>

<p><a href="../../dc/df1/classAbsParameter-members.xhtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#ad07643baba6cc75c6036d83ae97f9428">AbsParameter</a> (std::string name, <a class="el" href="../../d8/def/AbsParameter_8hpp.xhtml#a5c1a62d78971166ef74c26cf99527f8a">ParType</a> type=ParType::UNDEFINED)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with name of parameter and optional type.  <a href="#ad07643baba6cc75c6036d83ae97f9428"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a881d731fe387c785a76b6aad22445400">GetName</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for name of object.  <a href="#a881d731fe387c785a76b6aad22445400"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/def/AbsParameter_8hpp.xhtml#a5c1a62d78971166ef74c26cf99527f8a">ParType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a126b949117c9428eca256fb279e34a06">type</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for type of object.  <a href="#a126b949117c9428eca256fb279e34a06"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a6798bb427c8fb456c4caae1b1b132ab7">TypeName</a> ()=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for typename of object, to be defined by the actual implementation.  <a href="#a6798bb427c8fb456c4caae1b1b132ab7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#ae811fcec3165b341f11817196eba837f">Attach</a> (std::shared_ptr&lt; <a class="el" href="../../df/d75/classParObserver.xhtml">ParObserver</a> &gt; newObserver)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Attaches a new <a class="el" href="../../da/d83/classTreeNode.xhtml" title="TreeNode is the interface for elements of the FunctionTree.">TreeNode</a> as Observer.  <a href="#ae811fcec3165b341f11817196eba837f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a701f1791c5e45a5d20414836d5468826">Detach</a> (std::shared_ptr&lt; <a class="el" href="../../df/d75/classParObserver.xhtml">ParObserver</a> &gt; obsoleteObserver)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes TreeNodes not needed as Observer anymore.  <a href="#a701f1791c5e45a5d20414836d5468826"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a9d8d907c87e67616f1fadf77475c650c">Notify</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Notify all observing TreeNodes that parameter changed.  <a href="#a9d8d907c87e67616f1fadf77475c650c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual std::string const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a155e74bf1c96ce8321ab65c6a003f868">to_str</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A public function returning a string with parameter information.  <a href="#a155e74bf1c96ce8321ab65c6a003f868"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual std::string const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a68d85baeb9b1963a03795e4abf37db7a">val_to_str</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A public function returning a string with parameter value.  <a href="#a68d85baeb9b1963a03795e4abf37db7a"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a0c98ee88d1ccfbb6db5e7b02c96b2934">make_str</a> ()=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to fill output string, to be implemented by parameter implementations.  <a href="#a0c98ee88d1ccfbb6db5e7b02c96b2934"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a65c954387c0ad30e8daf73fddb4b27db">out_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Output string to print information.  <a href="#a65c954387c0ad30e8daf73fddb4b27db"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#ac9bd4b866495c7770e34cad366ebd0e2">outVal_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Output string to print only value.  <a href="#ac9bd4b866495c7770e34cad366ebd0e2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a1eaa1cd6f79b60be57c9b924eda0cad2">name_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">internal name of the parameter  <a href="#a1eaa1cd6f79b60be57c9b924eda0cad2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/def/AbsParameter_8hpp.xhtml#a5c1a62d78971166ef74c26cf99527f8a">ParType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a05225b008e34a284d5ffd65d0e479027">type_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">ParType enum for type of parameter.  <a href="#a05225b008e34a284d5ffd65d0e479027"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::shared_ptr<br class="typebreak"/>
&lt; <a class="el" href="../../df/d75/classParObserver.xhtml">ParObserver</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#abd724fca707acabfdf91b20739ce1e12">oberservingNodes</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">list of observers, e.g.  <a href="#abd724fca707acabfdf91b20739ce1e12"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a3b45a8d9bd0b00a09238f40ca421543a">operator&lt;&lt;</a> (std::ostream &amp;out, std::shared_ptr&lt; <a class="el" href="../../d7/d6a/classAbsParameter.xhtml">AbsParameter</a> &gt; b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return shared_pointer pointing to this Parameter.  <a href="#a3b45a8d9bd0b00a09238f40ca421543a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a4f06c9d592310ad3b31b4fc8f13e0faf">operator&lt;&lt;</a> (std::ostream &amp;out, const <a class="el" href="../../d7/d6a/classAbsParameter.xhtml">AbsParameter</a> &amp;b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">friend function to stream parameter information to output  <a href="#a4f06c9d592310ad3b31b4fc8f13e0faf"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../d9/de5/classBase.xhtml">Base</a> class for internal parameter. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ad07643baba6cc75c6036d83ae97f9428"></a><!-- doxytag: member="AbsParameter::AbsParameter" ref="ad07643baba6cc75c6036d83ae97f9428" args="(std::string name, ParType type=ParType::UNDEFINED)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">AbsParameter::AbsParameter </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/def/AbsParameter_8hpp.xhtml#a5c1a62d78971166ef74c26cf99527f8a">ParType</a>&#160;</td>
          <td class="paramname"><em>type</em> = <code>ParType::UNDEFINED</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor with name of parameter and optional type. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="ae811fcec3165b341f11817196eba837f"></a><!-- doxytag: member="AbsParameter::Attach" ref="ae811fcec3165b341f11817196eba837f" args="(std::shared_ptr&lt; ParObserver &gt; newObserver)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AbsParameter::Attach </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../df/d75/classParObserver.xhtml">ParObserver</a> &gt;&#160;</td>
          <td class="paramname"><em>newObserver</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Attaches a new <a class="el" href="../../da/d83/classTreeNode.xhtml" title="TreeNode is the interface for elements of the FunctionTree.">TreeNode</a> as Observer. </p>

</div>
</div>
<a class="anchor" id="a701f1791c5e45a5d20414836d5468826"></a><!-- doxytag: member="AbsParameter::Detach" ref="a701f1791c5e45a5d20414836d5468826" args="(std::shared_ptr&lt; ParObserver &gt; obsoleteObserver)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AbsParameter::Detach </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../df/d75/classParObserver.xhtml">ParObserver</a> &gt;&#160;</td>
          <td class="paramname"><em>obsoleteObserver</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Removes TreeNodes not needed as Observer anymore. </p>

</div>
</div>
<a class="anchor" id="a881d731fe387c785a76b6aad22445400"></a><!-- doxytag: member="AbsParameter::GetName" ref="a881d731fe387c785a76b6aad22445400" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; AbsParameter::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Getter for name of object. </p>

</div>
</div>
<a class="anchor" id="a0c98ee88d1ccfbb6db5e7b02c96b2934"></a><!-- doxytag: member="AbsParameter::make_str" ref="a0c98ee88d1ccfbb6db5e7b02c96b2934" args="()=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void AbsParameter::make_str </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected, pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Interface to fill output string, to be implemented by parameter implementations. </p>

<p>Implemented in <a class="el" href="../../d5/d65/classComplexParameter.xhtml#af99cc8d55f96b1a61c36f3940193d533">ComplexParameter</a>, <a class="el" href="../../dd/d8d/classDoubleParameter.xhtml#a2ae1b8adff069cad50f4586292d3e19d">DoubleParameter</a>, <a class="el" href="../../dc/da0/classIntegerParameter.xhtml#a0432071f33c3d53b730dbe888ff90f46">IntegerParameter</a>, and <a class="el" href="../../df/d1c/classBoolParameter.xhtml#ad385b85691363fa3a304455f110cb1eb">BoolParameter</a>.</p>

</div>
</div>
<a class="anchor" id="a9d8d907c87e67616f1fadf77475c650c"></a><!-- doxytag: member="AbsParameter::Notify" ref="a9d8d907c87e67616f1fadf77475c650c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AbsParameter::Notify </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Notify all observing TreeNodes that parameter changed. </p>

</div>
</div>
<a class="anchor" id="a155e74bf1c96ce8321ab65c6a003f868"></a><!-- doxytag: member="AbsParameter::to_str" ref="a155e74bf1c96ce8321ab65c6a003f868" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string const&amp; AbsParameter::to_str </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A public function returning a string with parameter information. </p>
<p>This function simply returns the member string out_, which contains all parameter information. The string gets rebuild with every change of the parameter. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>string with parameter information </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd>operator&lt;&lt;, <a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a0c98ee88d1ccfbb6db5e7b02c96b2934" title="Interface to fill output string, to be implemented by parameter implementations.">make_str()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a126b949117c9428eca256fb279e34a06"></a><!-- doxytag: member="AbsParameter::type" ref="a126b949117c9428eca256fb279e34a06" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../d8/def/AbsParameter_8hpp.xhtml#a5c1a62d78971166ef74c26cf99527f8a">ParType</a> AbsParameter::type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Getter for type of object. </p>

</div>
</div>
<a class="anchor" id="a6798bb427c8fb456c4caae1b1b132ab7"></a><!-- doxytag: member="AbsParameter::TypeName" ref="a6798bb427c8fb456c4caae1b1b132ab7" args="()=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string AbsParameter::TypeName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Getter for typename of object, to be defined by the actual implementation. </p>

<p>Implemented in <a class="el" href="../../d5/d65/classComplexParameter.xhtml#a53aaee0587bf6432126225e00deff91c">ComplexParameter</a>, <a class="el" href="../../dd/d8d/classDoubleParameter.xhtml#a602221f7ad87fa76c60d8cd8649ad5f0">DoubleParameter</a>, <a class="el" href="../../dc/da0/classIntegerParameter.xhtml#a4fa223c2f21a5c0c71a09d2e0e9848e3">IntegerParameter</a>, and <a class="el" href="../../df/d1c/classBoolParameter.xhtml#a54eac639b164144358026effa2aa37d6">BoolParameter</a>.</p>

</div>
</div>
<a class="anchor" id="a68d85baeb9b1963a03795e4abf37db7a"></a><!-- doxytag: member="AbsParameter::val_to_str" ref="a68d85baeb9b1963a03795e4abf37db7a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string const&amp; AbsParameter::val_to_str </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A public function returning a string with parameter value. </p>
<p>This function simply returns the member string outVal_, which contains the parameter value. The string gets rebuild with every change of the parameter. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>string with parameter information </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a0c98ee88d1ccfbb6db5e7b02c96b2934" title="Interface to fill output string, to be implemented by parameter implementations.">make_str()</a> </dd></dl>

</div>
</div>
<hr/><h2>Friends And Related Function Documentation</h2>
<a class="anchor" id="a3b45a8d9bd0b00a09238f40ca421543a"></a><!-- doxytag: member="AbsParameter::operator&lt;&lt;" ref="a3b45a8d9bd0b00a09238f40ca421543a" args="(std::ostream &amp;out, std::shared_ptr&lt; AbsParameter &gt; b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../d7/d6a/classAbsParameter.xhtml">AbsParameter</a> &gt;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Return shared_pointer pointing to this Parameter. </p>
<p>friend function to stream parameter information to output</p>
<p>Declaring the stream-operator &lt;&lt; as friend allows to stream parameter information to the output as easily as a generic type. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a0c98ee88d1ccfbb6db5e7b02c96b2934" title="Interface to fill output string, to be implemented by parameter implementations.">make_str()</a>, <a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a155e74bf1c96ce8321ab65c6a003f868" title="A public function returning a string with parameter information.">to_str()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a4f06c9d592310ad3b31b4fc8f13e0faf"></a><!-- doxytag: member="AbsParameter::operator&lt;&lt;" ref="a4f06c9d592310ad3b31b4fc8f13e0faf" args="(std::ostream &amp;out, const AbsParameter &amp;b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d7/d6a/classAbsParameter.xhtml">AbsParameter</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>friend function to stream parameter information to output </p>
<p>Declaring the stream-operator &lt;&lt; as friend allows to stream parameter information to the output as easily as a generic type. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a0c98ee88d1ccfbb6db5e7b02c96b2934" title="Interface to fill output string, to be implemented by parameter implementations.">make_str()</a>, <a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a155e74bf1c96ce8321ab65c6a003f868" title="A public function returning a string with parameter information.">to_str()</a> </dd></dl>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a1eaa1cd6f79b60be57c9b924eda0cad2"></a><!-- doxytag: member="AbsParameter::name_" ref="a1eaa1cd6f79b60be57c9b924eda0cad2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a1eaa1cd6f79b60be57c9b924eda0cad2">AbsParameter::name_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>internal name of the parameter </p>

</div>
</div>
<a class="anchor" id="abd724fca707acabfdf91b20739ce1e12"></a><!-- doxytag: member="AbsParameter::oberservingNodes" ref="abd724fca707acabfdf91b20739ce1e12" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::shared_ptr&lt;<a class="el" href="../../df/d75/classParObserver.xhtml">ParObserver</a>&gt; &gt; <a class="el" href="../../d7/d6a/classAbsParameter.xhtml#abd724fca707acabfdf91b20739ce1e12">AbsParameter::oberservingNodes</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>list of observers, e.g. </p>
<p>TreeNodes </p>

</div>
</div>
<a class="anchor" id="a65c954387c0ad30e8daf73fddb4b27db"></a><!-- doxytag: member="AbsParameter::out_" ref="a65c954387c0ad30e8daf73fddb4b27db" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a65c954387c0ad30e8daf73fddb4b27db">AbsParameter::out_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Output string to print information. </p>

<p>Reimplemented in <a class="el" href="../../dd/d8d/classDoubleParameter.xhtml#ad3c3e06213e3c1bd6290a592b0c2c021">DoubleParameter</a>.</p>

</div>
</div>
<a class="anchor" id="ac9bd4b866495c7770e34cad366ebd0e2"></a><!-- doxytag: member="AbsParameter::outVal_" ref="ac9bd4b866495c7770e34cad366ebd0e2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="../../d7/d6a/classAbsParameter.xhtml#ac9bd4b866495c7770e34cad366ebd0e2">AbsParameter::outVal_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Output string to print only value. </p>

</div>
</div>
<a class="anchor" id="a05225b008e34a284d5ffd65d0e479027"></a><!-- doxytag: member="AbsParameter::type_" ref="a05225b008e34a284d5ffd65d0e479027" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/def/AbsParameter_8hpp.xhtml#a5c1a62d78971166ef74c26cf99527f8a">ParType</a> <a class="el" href="../../d7/d6a/classAbsParameter.xhtml#a05225b008e34a284d5ffd65d0e479027">AbsParameter::type_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>ParType enum for type of parameter. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Core/<a class="el" href="../../d8/def/AbsParameter_8hpp_source.xhtml">AbsParameter.hpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Mon Dec 16 2013 for ComPWA by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.7.4 </small></address>
</body>
</html>
