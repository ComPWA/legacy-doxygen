<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ComPWA: FunctionTree Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ComPWA</div>
   <div id="projectbrief">Common Partial-Wave-Analysis Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">FunctionTree Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="FunctionTree" -->
<p><a class="el" href="../../db/d4e/classFunctionTree.xhtml" title="FunctionTree for the actual Optimization.">FunctionTree</a> for the actual Optimization.  
 <a href="../../db/d4e/classFunctionTree.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../da/db2/FunctionTree_8hpp_source.xhtml">FunctionTree.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for FunctionTree:</div>
<div class="dyncontent">
<div class="center"><iframe src="../../d4/daa/classFunctionTree__coll__graph.svg" width="342" height="728" frameborder="0" scrolling="no"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="../../graph_legend.xhtml">legend</a>]</span></center></div>

<p><a href="../../d0/da3/classFunctionTree-members.xhtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#abbed10393af549b8c47eeda2a41ee050">FunctionTree</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard constructor.  <a href="#abbed10393af549b8c47eeda2a41ee050"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#abdfab0cf52a8d1a41c07366056b682d8">FunctionTree</a> (std::shared_ptr&lt; <a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a> &gt; head)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard constructor.  <a href="#abdfab0cf52a8d1a41c07366056b682d8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#af18eb4b2af7fc935bbdddea2664b15b9">~FunctionTree</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#af18eb4b2af7fc935bbdddea2664b15b9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#ab69fc24891172146a80844adafdec53d">addNode</a> (std::shared_ptr&lt; <a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a> &gt; newNode)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Add node to FcnTree.  <a href="#ab69fc24891172146a80844adafdec53d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#a1c4a0a6bedded50b6f309473f2107eb7">createHead</a> (const std::string &amp;name, std::shared_ptr&lt; <a class="el" href="../../d2/df2/classStrategy.xhtml">Strategy</a> &gt; strat)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create head node of FcnTree.  <a href="#a1c4a0a6bedded50b6f309473f2107eb7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#a99747122bc4c10a5d23404fe675e2db8">createNode</a> (const std::string &amp;name, std::shared_ptr&lt; <a class="el" href="../../d2/df2/classStrategy.xhtml">Strategy</a> &gt; strat, std::string parent)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a node for the FcnTree.  <a href="#a99747122bc4c10a5d23404fe675e2db8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#a1e6e54ba1b97b3fd9f1169fababcb519">createLeaf</a> (const std::string name, const double extPar, std::string parent)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a leaf for the FcnTree.  <a href="#a1e6e54ba1b97b3fd9f1169fababcb519"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#a44029cd86a372185320cc27bf529271a">createLeaf</a> (const std::string name, std::shared_ptr&lt; <a class="el" href="../../d7/d6a/classAbsParameter.xhtml">AbsParameter</a> &gt; extPar, std::string parent)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a leaf for the FcnTree.  <a href="#a44029cd86a372185320cc27bf529271a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const std::shared_ptr<br class="typebreak"/>
&lt; <a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#a8102d6ce16e86b404cc2add774280e98">head</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">return the head of the tree  <a href="#a8102d6ce16e86b404cc2add774280e98"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#a5fd9dddbd650d471f0950d8efaede3a1">recalculate</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#af3e16cfb83914a900d8e9188066fc1f1">head_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">the head node storing the absolute result  <a href="#af3e16cfb83914a900d8e9188066fc1f1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::map&lt; std::string, <br class="typebreak"/>
std::shared_ptr&lt; <a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#abddde6e92373980c5fb3212dde676ac3">nodes_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">map to store the nodes  <a href="#abddde6e92373980c5fb3212dde676ac3"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#adb151ae77c2f66aaa19125fd16dc7d96">operator&lt;&lt;</a> (std::ostream &amp;out, const <a class="el" href="../../db/d4e/classFunctionTree.xhtml">FunctionTree</a> &amp;b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">friend function to stream parameter information to output  <a href="#adb151ae77c2f66aaa19125fd16dc7d96"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4e/classFunctionTree.xhtml#a1600c99126915d65e1584ebe848b545c">operator&lt;&lt;</a> (std::ostream &amp;out, std::shared_ptr&lt; <a class="el" href="../../db/d4e/classFunctionTree.xhtml">FunctionTree</a> &gt; b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">friend function to stream parameter information to output  <a href="#a1600c99126915d65e1584ebe848b545c"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../db/d4e/classFunctionTree.xhtml" title="FunctionTree for the actual Optimization.">FunctionTree</a> for the actual Optimization. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="abbed10393af549b8c47eeda2a41ee050"></a><!-- doxytag: member="FunctionTree::FunctionTree" ref="abbed10393af549b8c47eeda2a41ee050" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">FunctionTree::FunctionTree </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Standard constructor. </p>
<p>Standard constructor for empty tree </p>

</div>
</div>
<a class="anchor" id="abdfab0cf52a8d1a41c07366056b682d8"></a><!-- doxytag: member="FunctionTree::FunctionTree" ref="abdfab0cf52a8d1a41c07366056b682d8" args="(std::shared_ptr&lt; TreeNode &gt; head)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">FunctionTree::FunctionTree </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a> &gt;&#160;</td>
          <td class="paramname"><em>head</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Standard constructor. </p>
<p>Standard constructor with the top node provided /param head first node to be used as head </p>

</div>
</div>
<a class="anchor" id="af18eb4b2af7fc935bbdddea2664b15b9"></a><!-- doxytag: member="FunctionTree::~FunctionTree" ref="af18eb4b2af7fc935bbdddea2664b15b9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual FunctionTree::~FunctionTree </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="ab69fc24891172146a80844adafdec53d"></a><!-- doxytag: member="FunctionTree::addNode" ref="ab69fc24891172146a80844adafdec53d" args="(std::shared_ptr&lt; TreeNode &gt; newNode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void FunctionTree::addNode </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a> &gt;&#160;</td>
          <td class="paramname"><em>newNode</em></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add node to FcnTree. </p>
<p>Add a node to the function tree Adds Top-Down-Linking to the node </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">newNode</td><td>Node to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1c4a0a6bedded50b6f309473f2107eb7"></a><!-- doxytag: member="FunctionTree::createHead" ref="a1c4a0a6bedded50b6f309473f2107eb7" args="(const std::string &amp;name, std::shared_ptr&lt; Strategy &gt; strat)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void FunctionTree::createHead </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../d2/df2/classStrategy.xhtml">Strategy</a> &gt;&#160;</td>
          <td class="paramname"><em>strat</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create head node of FcnTree. </p>
<p>Add top node to the function tree </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>identifier of node </td></tr>
    <tr><td class="paramname">strat</td><td><a class="el" href="../../d2/df2/classStrategy.xhtml" title="Functions to be used in FuntionTree.">Strategy</a> with which the node calculates its value </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../db/d4e/classFunctionTree.xhtml#ab69fc24891172146a80844adafdec53d" title="Add node to FcnTree.">addNode()</a>, <a class="el" href="../../db/d4e/classFunctionTree.xhtml#a99747122bc4c10a5d23404fe675e2db8" title="Create a node for the FcnTree.">createNode()</a>, <a class="el" href="../../db/d4e/classFunctionTree.xhtml#a1e6e54ba1b97b3fd9f1169fababcb519" title="Create a leaf for the FcnTree.">createLeaf()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a1e6e54ba1b97b3fd9f1169fababcb519"></a><!-- doxytag: member="FunctionTree::createLeaf" ref="a1e6e54ba1b97b3fd9f1169fababcb519" args="(const std::string name, const double extPar, std::string parent)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void FunctionTree::createLeaf </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>extPar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>parent</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create a leaf for the FcnTree. </p>
<p>Create and add a static node to the function tree if not existing yet Adds Top-Down-Linking to the node </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>identifier of node </td></tr>
    <tr><td class="paramname">extPar</td><td>the parameter this node represents </td></tr>
    <tr><td class="paramname">parent</td><td>the parent of this node (for linking) </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../db/d4e/classFunctionTree.xhtml#ab69fc24891172146a80844adafdec53d" title="Add node to FcnTree.">addNode()</a>, <a class="el" href="../../db/d4e/classFunctionTree.xhtml#a1c4a0a6bedded50b6f309473f2107eb7" title="Create head node of FcnTree.">createHead()</a>, <a class="el" href="../../db/d4e/classFunctionTree.xhtml#a99747122bc4c10a5d23404fe675e2db8" title="Create a node for the FcnTree.">createNode()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a44029cd86a372185320cc27bf529271a"></a><!-- doxytag: member="FunctionTree::createLeaf" ref="a44029cd86a372185320cc27bf529271a" args="(const std::string name, std::shared_ptr&lt; AbsParameter &gt; extPar, std::string parent)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void FunctionTree::createLeaf </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../d7/d6a/classAbsParameter.xhtml">AbsParameter</a> &gt;&#160;</td>
          <td class="paramname"><em>extPar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>parent</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create a leaf for the FcnTree. </p>
<p>Create and add a node to the function tree if not existing yet Adds Top-Down-Linking to the node Attaches the Node as Observer to the external parameter </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>identifier of node </td></tr>
    <tr><td class="paramname">extPar</td><td>the parameter this node represents </td></tr>
    <tr><td class="paramname">parent</td><td>the parent of this node (for linking) </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../db/d4e/classFunctionTree.xhtml#ab69fc24891172146a80844adafdec53d" title="Add node to FcnTree.">addNode()</a>, <a class="el" href="../../db/d4e/classFunctionTree.xhtml#a1c4a0a6bedded50b6f309473f2107eb7" title="Create head node of FcnTree.">createHead()</a>, <a class="el" href="../../db/d4e/classFunctionTree.xhtml#a99747122bc4c10a5d23404fe675e2db8" title="Create a node for the FcnTree.">createNode()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a99747122bc4c10a5d23404fe675e2db8"></a><!-- doxytag: member="FunctionTree::createNode" ref="a99747122bc4c10a5d23404fe675e2db8" args="(const std::string &amp;name, std::shared_ptr&lt; Strategy &gt; strat, std::string parent)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void FunctionTree::createNode </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../d2/df2/classStrategy.xhtml">Strategy</a> &gt;&#160;</td>
          <td class="paramname"><em>strat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>parent</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create a node for the FcnTree. </p>
<p>Create and add a node to the function tree Adds Top-Down-Linking to the node </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>identifier of node </td></tr>
    <tr><td class="paramname">strat</td><td><a class="el" href="../../d2/df2/classStrategy.xhtml" title="Functions to be used in FuntionTree.">Strategy</a> with which the node calculates its value </td></tr>
    <tr><td class="paramname">parent</td><td>the parent of this node (for linking) </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="../../db/d4e/classFunctionTree.xhtml#ab69fc24891172146a80844adafdec53d" title="Add node to FcnTree.">addNode()</a>, <a class="el" href="../../db/d4e/classFunctionTree.xhtml#a1c4a0a6bedded50b6f309473f2107eb7" title="Create head node of FcnTree.">createHead()</a>, <a class="el" href="../../db/d4e/classFunctionTree.xhtml#a1e6e54ba1b97b3fd9f1169fababcb519" title="Create a leaf for the FcnTree.">createLeaf()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a8102d6ce16e86b404cc2add774280e98"></a><!-- doxytag: member="FunctionTree::head" ref="a8102d6ce16e86b404cc2add774280e98" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::shared_ptr&lt;<a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a>&gt; FunctionTree::head </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>return the head of the tree </p>
<p>Access to the head element of the tree </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>FuntionTreeNode at head of tree </dd></dl>

</div>
</div>
<a class="anchor" id="a5fd9dddbd650d471f0950d8efaede3a1"></a><!-- doxytag: member="FunctionTree::recalculate" ref="a5fd9dddbd650d471f0950d8efaede3a1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void FunctionTree::recalculate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Friends And Related Function Documentation</h2>
<a class="anchor" id="adb151ae77c2f66aaa19125fd16dc7d96"></a><!-- doxytag: member="FunctionTree::operator&lt;&lt;" ref="adb151ae77c2f66aaa19125fd16dc7d96" args="(std::ostream &amp;out, const FunctionTree &amp;b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d4e/classFunctionTree.xhtml">FunctionTree</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>friend function to stream parameter information to output </p>
<p>Declaring the stream-operator &lt;&lt; as friend allows to stream parameter information to the output as easily as a generic type. </p>
<dl class="see"><dt><b>See also:</b></dt><dd>make_str(), to_str() </dd></dl>

</div>
</div>
<a class="anchor" id="a1600c99126915d65e1584ebe848b545c"></a><!-- doxytag: member="FunctionTree::operator&lt;&lt;" ref="a1600c99126915d65e1584ebe848b545c" args="(std::ostream &amp;out, std::shared_ptr&lt; FunctionTree &gt; b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="../../db/d4e/classFunctionTree.xhtml">FunctionTree</a> &gt;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>friend function to stream parameter information to output </p>
<p>Declaring the stream-operator &lt;&lt; as friend allows to stream parameter information to the output as easily as a generic type. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">out</td><td>the ostream the object is piped to </td></tr>
    <tr><td class="paramname">b</td><td>the piped object </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd>make_str(), to_str() </dd></dl>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="af3e16cfb83914a900d8e9188066fc1f1"></a><!-- doxytag: member="FunctionTree::head_" ref="af3e16cfb83914a900d8e9188066fc1f1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a>&gt; <a class="el" href="../../db/d4e/classFunctionTree.xhtml#af3e16cfb83914a900d8e9188066fc1f1">FunctionTree::head_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>the head node storing the absolute result </p>

</div>
</div>
<a class="anchor" id="abddde6e92373980c5fb3212dde676ac3"></a><!-- doxytag: member="FunctionTree::nodes_" ref="abddde6e92373980c5fb3212dde676ac3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt;std::string, std::shared_ptr&lt;<a class="el" href="../../da/d83/classTreeNode.xhtml">TreeNode</a>&gt; &gt; <a class="el" href="../../db/d4e/classFunctionTree.xhtml#abddde6e92373980c5fb3212dde676ac3">FunctionTree::nodes_</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>map to store the nodes </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Core/<a class="el" href="../../da/db2/FunctionTree_8hpp_source.xhtml">FunctionTree.hpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Thu Oct 24 2013 for ComPWA by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.7.4 </small></address>
</body>
</html>
