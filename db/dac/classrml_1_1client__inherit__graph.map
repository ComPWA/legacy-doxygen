<map id="rml::client" name="rml::client">
<area shape="rect" id="node3" href="$dd/d7b/class____kmp_1_1rml_1_1omp__client.html" title="{__kmp::rml::omp_client\n||}" alt="" coords="117,263,287,341"/>
<area shape="rect" id="node6" href="$da/d3f/classtbb_1_1internal_1_1rml_1_1tbb__client.html" title="{tbb::internal::rml\l::tbb_client\n||}" alt="" coords="385,256,513,348"/>
<area shape="rect" id="node2" href="$de/d28/classrml_1_1versioned__object.html" title="{rml::versioned_object\n||}" alt="" coords="283,5,441,83"/>
<area shape="rect" id="node4" href="$da/d91/classClientBase.html" title="{ClientBase\&lt; __kmp::\lrml::omp_client \&gt;\n|+ state\l+ expect_close_connection\l+ job_array\l+ nesting\l&#45; my_max_job_count\l&#45; my_stack_size\l&#45; next_job_index\l&#45; my_client_id\l&#45; my_server\l|+ version()\l+ min_stack_size()\l+ create_one_job()\l+ policy()\l+ acknowledge_close_connection()\l+ cleanup()\l+ ~ClientBase()\l+ ~ClientBase()\l+ update()\l+ max_job_count()\l+ ClientBase()\l+ client_id()\l+ initialize()\l+ set_server()\l+ default_concurrency()\l# do_process()\l&#45; version()\l&#45; min_stack_size()\l&#45; create_one_job()\l&#45; policy()\l&#45; acknowledge_close_connection()\l&#45; cleanup()\l}" alt="" coords="5,484,252,1001"/>
<area shape="rect" id="node5" href="$d1/d4f/classMyClient.html" title="{MyClient\n|+ server\l+ is_omp\l&#45; counter\l&#45; gate\l|+ version()\l+ max_job_count()\l+ min_stack_size()\l+ create_one_job()\l+ acknowledge_close_connection()\l+ cleanup()\l+ policy()\l+ process()\l+ process()\l+ is_strict()\l+ MyClient()\l+ is_strict()\l+ open_the_gate()\l+ close_the_gate()\l&#45; process()\l}" alt="" coords="165,1137,412,1464"/>
<area shape="rect" id="node7" href="$da/d91/classClientBase.html" title="{ClientBase\&lt; tbb::internal\l::rml::tbb_client \&gt;\n|+ state\l+ expect_close_connection\l+ job_array\l+ nesting\l&#45; my_max_job_count\l&#45; my_stack_size\l&#45; next_job_index\l&#45; my_client_id\l&#45; my_server\l|+ version()\l+ min_stack_size()\l+ create_one_job()\l+ policy()\l+ acknowledge_close_connection()\l+ cleanup()\l+ ~ClientBase()\l+ ~ClientBase()\l+ update()\l+ max_job_count()\l+ ClientBase()\l+ client_id()\l+ initialize()\l+ set_server()\l+ default_concurrency()\l# do_process()\l&#45; version()\l&#45; min_stack_size()\l&#45; create_one_job()\l&#45; policy()\l&#45; acknowledge_close_connection()\l&#45; cleanup()\l}" alt="" coords="325,484,572,1001"/>
<area shape="rect" id="node8" href="$d6/dab/classtbb_1_1internal_1_1market.html" title="{tbb::internal::market\n|&#45; my_arenas_list_mutex\l&#45; my_server\l&#45; my_num_workers_hard\l_limit\l&#45; my_num_workers_soft\l_limit\l&#45; my_num_workers_requested\l&#45; my_first_unused_worker_idx\l&#45; my_total_demand\l&#45; my_arenas\l&#45; my_next_arena\l&#45; my_arenas_aba_epoch\l&#45; my_ref_count\l&#45; my_public_ref_count\l&#45; my_stack_size\l&#45; my_join_workers\l&#45; my_workers_soft_limit\l_to_report\l&#45; theMarket\l&#45; theMarketMutex\l&#45; skip_soft_limit_warning\l|+ try_destroy_arena()\l+ detach_arena()\l+ release()\l+ adjust_demand()\l+ must_join_workers()\l+ worker_stack_size()\l+ create_arena()\l+ set_active_num_workers()\l+ app_parallelism_limit()\l+ max_num_workers()\l&#45; market()\l&#45; destroy()\l&#45; update_allotment()\l&#45; arena_in_need()\l&#45; assert_market_valid()\l&#45; insert_arena_into_list()\l&#45; remove_arena_from_list()\l&#45; arena_in_need()\l&#45; is_arena_in_list()\l&#45; version()\land 7 more...\l&#45; global_market()\l&#45; update_allotment()\l}" alt="" coords="596,396,811,1089"/>
</map>
