<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>ComPWA: Physics/AmplitudeSum/AmplitudeSetup.hpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ComPWA</div>
   <div id="projectbrief">Common Partial-Wave-Analysis Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">Physics/AmplitudeSum/AmplitudeSetup.hpp</div>  </div>
</div>
<div class="contents">
<a href="../../dd/d27/AmplitudeSetup_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//-------------------------------------------------------------------------------</span>
<a name="l00002"></a>00002 <span class="comment">// Copyright (c) 2013 Mathias Michel.</span>
<a name="l00003"></a>00003 <span class="comment">// All rights reserved. This program and the accompanying materials</span>
<a name="l00004"></a>00004 <span class="comment">// are made available under the terms of the GNU Public License v3.0</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available at</span>
<a name="l00006"></a>00006 <span class="comment">// http://www.gnu.org/licenses/gpl.html</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">//     Mathias Michel - initial API and implementation</span>
<a name="l00010"></a>00010 <span class="comment">//              Peter Weidenkaff - adding parameters for flatte description</span>
<a name="l00011"></a>00011 <span class="comment">//-------------------------------------------------------------------------------</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef _AMPLITUDESETUP_HPP</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define _AMPLITUDESETUP_HPP</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a>00024 <span class="comment">// Standard header files go here</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;memory&gt;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="comment">// Boost header files go here</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;boost/foreach.hpp&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;boost/property_tree/ptree.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;boost/property_tree/xml_parser.hpp&gt;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;boost/log/trivial.hpp&gt;</span>
<a name="l00035"></a>00035 <span class="keyword">using namespace </span>boost::log;
<a name="l00036"></a>00036 
<a name="l00037"></a><a class="code" href="../../d6/d5b/structResonance.xhtml">00037</a> <span class="keyword">struct </span><a class="code" href="../../d6/d5b/structResonance.xhtml">Resonance</a>
<a name="l00038"></a>00038 {
<a name="l00039"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a7dd549720e81f791a29e68607fcb358a">00039</a>         <span class="keywordtype">bool</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a7dd549720e81f791a29e68607fcb358a">m_enable</a>;
<a name="l00040"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">00040</a>         std::string <a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>;
<a name="l00041"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#acbe03f1359a0eb1bf721fea9a7a03b13">00041</a>         std::string <a class="code" href="../../d6/d5b/structResonance.xhtml#acbe03f1359a0eb1bf721fea9a7a03b13">m_reference</a>;
<a name="l00042"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#ab9de5ccd6d828375f6619356f188bdbf">00042</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#ab9de5ccd6d828375f6619356f188bdbf">m_mass</a>; <span class="comment">//TODO: struct for borders?</span>
<a name="l00043"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#ae58216b62a7b73ee275c228dc168d8e6">00043</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#ae58216b62a7b73ee275c228dc168d8e6">m_mass_min</a>;
<a name="l00044"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a10b762dd6be3a75ef2dbc7db8ce0df82">00044</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a10b762dd6be3a75ef2dbc7db8ce0df82">m_mass_max</a>;
<a name="l00045"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a82b703f9b6c54c9ab4410d9c57248850">00045</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a82b703f9b6c54c9ab4410d9c57248850">m_mesonRadius</a>;
<a name="l00046"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a6a164223523da9b82f05dfe412bf7d85">00046</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a6a164223523da9b82f05dfe412bf7d85">m_width</a>;
<a name="l00047"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a96cd124336b15b78a2da80667f754c16">00047</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a96cd124336b15b78a2da80667f754c16">m_width_min</a>;
<a name="l00048"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#aae6f37d58ee8ea168b28fff6db5065ff">00048</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#aae6f37d58ee8ea168b28fff6db5065ff">m_width_max</a>;
<a name="l00049"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a068e773739680069b5a20e72db8284dd">00049</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a068e773739680069b5a20e72db8284dd">m_norm</a>;
<a name="l00050"></a>00050 
<a name="l00051"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a924fdc23c262d0536bb1c0aafcf167d9">00051</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a924fdc23c262d0536bb1c0aafcf167d9">m_strength</a>;
<a name="l00052"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a9979c547069b4a452c276a63da896a72">00052</a>         <span class="keywordtype">double</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a9979c547069b4a452c276a63da896a72">m_phase</a>;
<a name="l00053"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">00053</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a>;
<a name="l00054"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#ab9adb4ca4e03de9163a175be1c322685">00054</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#ab9adb4ca4e03de9163a175be1c322685">m_m</a>;
<a name="l00055"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a6fddfde0c0200d51fd25496d17beb44d">00055</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a6fddfde0c0200d51fd25496d17beb44d">m_n</a>;
<a name="l00056"></a>00056 
<a name="l00057"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">00057</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">m_daugtherA</a>; <span class="comment">//TODO: better reference</span>
<a name="l00058"></a><a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">00058</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">m_daugtherB</a>; <span class="comment">//TODO: better reference</span>
<a name="l00059"></a>00059 };
<a name="l00060"></a><a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml">00060</a> <span class="keyword">struct </span><a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml">ResonanceFlatte</a> : <a class="code" href="../../d6/d5b/structResonance.xhtml">Resonance</a>
<a name="l00061"></a>00061 {
<a name="l00062"></a><a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#a98adfda1a9d2572888847df274b5f71e">00062</a>         <span class="keywordtype">double</span> <a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#a98adfda1a9d2572888847df274b5f71e">m_coupling</a>;
<a name="l00063"></a><a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#ad82c2318cff3fc3a55730f974c48b027">00063</a>         <span class="keywordtype">double</span> <a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#ad82c2318cff3fc3a55730f974c48b027">m_couplingHidden</a>;
<a name="l00064"></a><a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#a7125dc9d809ab32825a335a40d838734">00064</a>         std::string <a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#a7125dc9d809ab32825a335a40d838734">m_hiddenParticle1</a>;
<a name="l00065"></a><a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#aae306aff3dd0fb3964cb14fa0cbc65ee">00065</a>         std::string <a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#aae306aff3dd0fb3964cb14fa0cbc65ee">m_hiddenParticle2</a>;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 };
<a name="l00068"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml">00068</a> <span class="keyword">class </span><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml" title="This class is used to load an Amplitude configuration provided in an XML file.">AmplitudeSetup</a>
<a name="l00069"></a>00069 {
<a name="l00070"></a>00070 <span class="keyword">private</span>:
<a name="l00071"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#ac3e89e4e13b5e36508058c81177bcea1">00071</a>         std::string <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#ac3e89e4e13b5e36508058c81177bcea1">m_filePath</a>;
<a name="l00072"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a010b7d8523f561c1b9d7ded77c7799b9">00072</a>         std::string <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a010b7d8523f561c1b9d7ded77c7799b9">m_file</a>;          <span class="comment">// ini filename</span>
<a name="l00073"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#ae6af50950306a303e7675d6c68bdc9f5">00073</a>         std::vector&lt;Resonance&gt; <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#ae6af50950306a303e7675d6c68bdc9f5">m_resonances</a>;          <span class="comment">// resonances</span>
<a name="l00074"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a87434db3ef0c5632f1acaddfb43c8be2">00074</a>         std::vector&lt;ResonanceFlatte&gt; <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a87434db3ef0c5632f1acaddfb43c8be2">m_resonancesFlatte</a>;          <span class="comment">// resonances</span>
<a name="l00075"></a>00075 
<a name="l00076"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#ad4a1b53592171b7302e154f06460c311">00076</a> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#ad4a1b53592171b7302e154f06460c311">nResEnabled</a>;
<a name="l00077"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#ac7a96e971feacf37debcf0c20d9b6f31">00077</a> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#ac7a96e971feacf37debcf0c20d9b6f31">nRes</a>;
<a name="l00078"></a>00078 <span class="keyword">public</span>:
<a name="l00079"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a7b0216893bfed41c13d975aa683d6012">00079</a>         <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a7b0216893bfed41c13d975aa683d6012">AmplitudeSetup</a>(<span class="keyword">const</span> std::string &amp;filename) : nRes(0),nResEnabled(0) { load(filename); };
<a name="l00080"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a9e415d3cca43cd3e8f42fcd29e3fda3c">00080</a>         <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml" title="This class is used to load an Amplitude configuration provided in an XML file.">AmplitudeSetup</a>(<span class="keyword">const</span> <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml" title="This class is used to load an Amplitude configuration provided in an XML file.">AmplitudeSetup</a>&amp; other) : m_file(other.m_file), m_filePath(other.m_filePath),\
<a name="l00081"></a>00081                         m_resonances(other.m_resonances) , m_resonancesFlatte(other.m_resonancesFlatte),\
<a name="l00082"></a>00082                         nRes(other.nRes),nResEnabled(other.nResEnabled)
<a name="l00083"></a>00083                         {};
<a name="l00084"></a>00084         <span class="keywordtype">void</span> load(<span class="keyword">const</span> std::string &amp;filename);
<a name="l00085"></a>00085         <span class="keywordtype">void</span> save(<span class="keyword">const</span> std::string &amp;filename);
<a name="l00086"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a532c10d76175f4a47534a10ac8b23512">00086</a>         <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a532c10d76175f4a47534a10ac8b23512">~AmplitudeSetup</a>(){};
<a name="l00087"></a>00087 
<a name="l00088"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a40fa4c41b60b30e202346c6612633ea0">00088</a>         <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a40fa4c41b60b30e202346c6612633ea0">getNResonances</a>() {<span class="keywordflow">return</span> m_resonances.size()+m_resonancesFlatte.size(); };
<a name="l00089"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a28cb86bfdfd0ddadbbad64dfec88a16e">00089</a>         <span class="keyword">inline</span> <span class="keyword">const</span> std::string &amp; <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a28cb86bfdfd0ddadbbad64dfec88a16e">getFileName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_file;};
<a name="l00090"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a344e83448f0c1554718a57d0cff7d4f2">00090</a>         <span class="keyword">inline</span> <span class="keyword">const</span> std::string &amp; <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a344e83448f0c1554718a57d0cff7d4f2">getFilePath</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_filePath;};
<a name="l00091"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a75045bb7b79b7b315069e6f0267873a4">00091</a>         <span class="keyword">inline</span> std::vector&lt;Resonance&gt; &amp; <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a75045bb7b79b7b315069e6f0267873a4">getResonances</a>() { <span class="keywordflow">return</span> m_resonances; };
<a name="l00092"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a62d1dab470f0113d7959e4f66933117a">00092</a>         <span class="keyword">inline</span> std::vector&lt;ResonanceFlatte&gt; &amp; <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a62d1dab470f0113d7959e4f66933117a">getResonancesFlatte</a>() { <span class="keywordflow">return</span> m_resonancesFlatte; };
<a name="l00093"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a413425ea9facdaee1e007145163ff2f7">00093</a>         <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a413425ea9facdaee1e007145163ff2f7">getNRes</a>(){ <span class="keywordflow">return</span> nRes; }
<a name="l00094"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a8e3f23040276395791655ea3de90e21e">00094</a>         <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a8e3f23040276395791655ea3de90e21e">getNResEnabled</a>(){ <span class="keywordflow">return</span> nResEnabled; }
<a name="l00095"></a>00095 
<a name="l00096"></a>00096 };
<a name="l00097"></a>00097 
<a name="l00098"></a>00098 <span class="comment">// Loads amplitude_setup structure from the specified XML file</span>
<a name="l00099"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a93e574c5c827a2a74e90b12302e658a3">00099</a> <span class="keywordtype">void</span> <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a93e574c5c827a2a74e90b12302e658a3">AmplitudeSetup::load</a>(<span class="keyword">const</span> std::string &amp;filename)
<a name="l00100"></a>00100 {
<a name="l00101"></a>00101         <span class="comment">// Create an empty property tree object</span>
<a name="l00102"></a>00102         <span class="keyword">using</span> boost::property_tree::ptree;
<a name="l00103"></a>00103         ptree pt;
<a name="l00104"></a>00104 
<a name="l00105"></a>00105         m_filePath=filename;
<a name="l00106"></a>00106         <span class="comment">// Load the XML file into the property tree. If reading fails</span>
<a name="l00107"></a>00107         <span class="comment">// (cannot open file, parse error), an exception is thrown.</span>
<a name="l00108"></a>00108         read_xml(filename, pt);
<a name="l00109"></a>00109         <span class="comment">// Get the filename and store it in the m_file variable.</span>
<a name="l00110"></a>00110         <span class="comment">// Note that we construct the path to the value by separating</span>
<a name="l00111"></a>00111         <span class="comment">// the individual keys with dots. If dots appear in the keys,</span>
<a name="l00112"></a>00112         <span class="comment">// a path type with a different separator can be used.</span>
<a name="l00113"></a>00113         <span class="comment">// If the amplitude_setup.filename key is not found, an</span>
<a name="l00114"></a>00114         <span class="comment">// exception is thrown.</span>
<a name="l00115"></a>00115         m_file = pt.get&lt;std::string&gt;(<span class="stringliteral">&quot;amplitude_setup.filename&quot;</span>);
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         <span class="comment">// Iterate over the amplitude_setup.resonances section and</span>
<a name="l00118"></a>00118         <span class="comment">// store all found resonance names in the m_name set.</span>
<a name="l00119"></a>00119         <span class="comment">// The get_child() function returns a reference to the child</span>
<a name="l00120"></a>00120         <span class="comment">// at the specified path; if there is no such child, it throws.</span>
<a name="l00121"></a>00121         <span class="comment">// Property tree iterators are models of BidirectionalIterator.</span>
<a name="l00122"></a>00122         BOOST_FOREACH( ptree::value_type <span class="keyword">const</span>&amp; v, pt.get_child(<span class="stringliteral">&quot;amplitude_setup&quot;</span>) ) {
<a name="l00123"></a>00123                 <span class="keywordflow">if</span>( v.first == <span class="stringliteral">&quot;resonance&quot;</span> ) {
<a name="l00124"></a>00124                         <a class="code" href="../../d6/d5b/structResonance.xhtml">Resonance</a> f;
<a name="l00125"></a>00125 <span class="comment">//                      f.m_reference= v.second.get&lt;std::string&gt;(&quot;reference&quot;);</span>
<a name="l00126"></a>00126                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a7dd549720e81f791a29e68607fcb358a">m_enable</a> = v.second.get&lt;<span class="keywordtype">bool</span>&gt;(<span class="stringliteral">&quot;enable&quot;</span>);
<a name="l00127"></a>00127                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a> = v.second.get&lt;std::string&gt;(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00128"></a>00128                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9de5ccd6d828375f6619356f188bdbf">m_mass</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;mass&quot;</span>);
<a name="l00129"></a>00129                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#ae58216b62a7b73ee275c228dc168d8e6">m_mass_min</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;mass_min&quot;</span>);;
<a name="l00130"></a>00130                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a10b762dd6be3a75ef2dbc7db8ce0df82">m_mass_max</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;mass_max&quot;</span>);;
<a name="l00131"></a>00131                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a82b703f9b6c54c9ab4410d9c57248850">m_mesonRadius</a>= v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;mesonRadius&quot;</span>);;
<a name="l00132"></a>00132                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6a164223523da9b82f05dfe412bf7d85">m_width</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;width&quot;</span>);;
<a name="l00133"></a>00133                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a96cd124336b15b78a2da80667f754c16">m_width_min</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;width_min&quot;</span>);;
<a name="l00134"></a>00134                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#aae6f37d58ee8ea168b28fff6db5065ff">m_width_max</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;width_max&quot;</span>);;
<a name="l00135"></a>00135                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a068e773739680069b5a20e72db8284dd">m_norm</a>= v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;norm&quot;</span>);;
<a name="l00136"></a>00136                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a924fdc23c262d0536bb1c0aafcf167d9">m_strength</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;strength&quot;</span>);;
<a name="l00137"></a>00137                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a9979c547069b4a452c276a63da896a72">m_phase</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;phase&quot;</span>);;
<a name="l00138"></a>00138                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;spin&quot;</span>);
<a name="l00139"></a>00139                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9adb4ca4e03de9163a175be1c322685">m_m</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;m&quot;</span>);
<a name="l00140"></a>00140                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6fddfde0c0200d51fd25496d17beb44d">m_n</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;n&quot;</span>);
<a name="l00141"></a>00141                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">m_daugtherA</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;daugtherA&quot;</span>);
<a name="l00142"></a>00142                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">m_daugtherB</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;daugtherB&quot;</span>);
<a name="l00143"></a>00143                         m_resonances.push_back(f);
<a name="l00144"></a>00144                         <span class="keywordflow">if</span>(f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a7dd549720e81f791a29e68607fcb358a">m_enable</a>) nResEnabled++;
<a name="l00145"></a>00145                         nRes++;
<a name="l00146"></a>00146                 }
<a name="l00147"></a>00147                 <span class="keywordflow">if</span>( v.first == <span class="stringliteral">&quot;resonanceFlatte&quot;</span> ) {
<a name="l00148"></a>00148                         <a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml">ResonanceFlatte</a> f;
<a name="l00149"></a>00149 <span class="comment">//                      f.m_reference= v.second.get&lt;std::string&gt;(&quot;reference&quot;);</span>
<a name="l00150"></a>00150                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a7dd549720e81f791a29e68607fcb358a">m_enable</a> = v.second.get&lt;<span class="keywordtype">bool</span>&gt;(<span class="stringliteral">&quot;enable&quot;</span>);
<a name="l00151"></a>00151                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a> = v.second.get&lt;std::string&gt;(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00152"></a>00152                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9de5ccd6d828375f6619356f188bdbf">m_mass</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;mass&quot;</span>);
<a name="l00153"></a>00153                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#ae58216b62a7b73ee275c228dc168d8e6">m_mass_min</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;mass_min&quot;</span>);;
<a name="l00154"></a>00154                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a10b762dd6be3a75ef2dbc7db8ce0df82">m_mass_max</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;mass_max&quot;</span>);;
<a name="l00155"></a>00155                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a82b703f9b6c54c9ab4410d9c57248850">m_mesonRadius</a>= v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;mesonRadius&quot;</span>);;
<a name="l00156"></a>00156                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6a164223523da9b82f05dfe412bf7d85">m_width</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;width&quot;</span>);;
<a name="l00157"></a>00157                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a96cd124336b15b78a2da80667f754c16">m_width_min</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;width_min&quot;</span>);;
<a name="l00158"></a>00158                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#aae6f37d58ee8ea168b28fff6db5065ff">m_width_max</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;width_max&quot;</span>);;
<a name="l00159"></a>00159                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a068e773739680069b5a20e72db8284dd">m_norm</a>= v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;norm&quot;</span>);;
<a name="l00160"></a>00160                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a924fdc23c262d0536bb1c0aafcf167d9">m_strength</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;strength&quot;</span>);;
<a name="l00161"></a>00161                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a9979c547069b4a452c276a63da896a72">m_phase</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;phase&quot;</span>);;
<a name="l00162"></a>00162                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;spin&quot;</span>);
<a name="l00163"></a>00163                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9adb4ca4e03de9163a175be1c322685">m_m</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;m&quot;</span>);
<a name="l00164"></a>00164                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6fddfde0c0200d51fd25496d17beb44d">m_n</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;n&quot;</span>);
<a name="l00165"></a>00165                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">m_daugtherA</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;daugtherA&quot;</span>);
<a name="l00166"></a>00166                         f.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">m_daugtherB</a> = v.second.get&lt;<span class="keywordtype">unsigned</span>&gt;(<span class="stringliteral">&quot;daugtherB&quot;</span>);
<a name="l00167"></a>00167                         f.<a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#a98adfda1a9d2572888847df274b5f71e">m_coupling</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;coupling&quot;</span>);
<a name="l00168"></a>00168                         f.<a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#ad82c2318cff3fc3a55730f974c48b027">m_couplingHidden</a> = v.second.get&lt;<span class="keywordtype">double</span>&gt;(<span class="stringliteral">&quot;couplingHidden&quot;</span>);
<a name="l00169"></a>00169                         f.<a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#a7125dc9d809ab32825a335a40d838734">m_hiddenParticle1</a> = v.second.get&lt;std::string&gt;(<span class="stringliteral">&quot;hiddenParticle1&quot;</span>);
<a name="l00170"></a>00170                         f.<a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#aae306aff3dd0fb3964cb14fa0cbc65ee">m_hiddenParticle2</a> = v.second.get&lt;std::string&gt;(<span class="stringliteral">&quot;hiddenParticle2&quot;</span>);
<a name="l00171"></a>00171                         m_resonancesFlatte.push_back(f);
<a name="l00172"></a>00172                         <span class="keywordflow">if</span>(f.<a class="code" href="../../d6/d5b/structResonance.xhtml#a7dd549720e81f791a29e68607fcb358a">m_enable</a>) nResEnabled++;
<a name="l00173"></a>00173                         nRes++;
<a name="l00174"></a>00174                 }
<a name="l00175"></a>00175         }
<a name="l00176"></a>00176         BOOST_LOG_TRIVIAL(info) &lt;&lt; <span class="stringliteral">&quot;AmplitudeSetup::load() file &quot;</span> &lt;&lt; filename
<a name="l00177"></a>00177                         &lt;&lt; <span class="stringliteral">&quot; with &quot;</span> &lt;&lt; nRes     &lt;&lt; <span class="stringliteral">&quot;(&quot;</span>&lt;&lt;nResEnabled&lt;&lt;<span class="stringliteral">&quot;) resonances all(enabled)!&quot;</span>;
<a name="l00178"></a>00178         <span class="keywordflow">return</span>;
<a name="l00179"></a>00179 }
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 <span class="comment">// Saves the debug_settings structure to the specified XML file</span>
<a name="l00182"></a><a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a337a729509cc9af427c4b7afa7bbb72d">00182</a> <span class="keywordtype">void</span> <a class="code" href="../../dc/d3a/classAmplitudeSetup.xhtml#a337a729509cc9af427c4b7afa7bbb72d">AmplitudeSetup::save</a>(<span class="keyword">const</span> std::string &amp;filename)
<a name="l00183"></a>00183 {
<a name="l00184"></a>00184         <span class="comment">// Create an empty property tree object</span>
<a name="l00185"></a>00185         <span class="keyword">using</span> boost::property_tree::ptree;
<a name="l00186"></a>00186         ptree pt;
<a name="l00187"></a>00187 
<a name="l00188"></a>00188         <span class="comment">// Put log filename in property tree</span>
<a name="l00189"></a>00189         pt.put(<span class="stringliteral">&quot;amplitude_setup.filename&quot;</span>, m_file);
<a name="l00190"></a>00190 
<a name="l00191"></a>00191         <span class="comment">// Iterate over the modules in the set and put them in the</span>
<a name="l00192"></a>00192         <span class="comment">// property tree. Note that the put function places the new</span>
<a name="l00193"></a>00193         <span class="comment">// key at the end of the list of keys. This is fine most of</span>
<a name="l00194"></a>00194         <span class="comment">// the time. If you want to place an item at some other place</span>
<a name="l00195"></a>00195         <span class="comment">// (i.e. at the front or somewhere in the middle), this can</span>
<a name="l00196"></a>00196         <span class="comment">// be achieved using a combination of the insert and put_own</span>
<a name="l00197"></a>00197         <span class="comment">// functions.</span>
<a name="l00198"></a>00198 
<a name="l00199"></a>00199         BOOST_FOREACH( <a class="code" href="../../d6/d5b/structResonance.xhtml">Resonance</a> <span class="keyword">const</span>&amp; v, m_resonances ) {
<a name="l00200"></a>00200                 ptree &amp; node = pt.add(<span class="stringliteral">&quot;amplitude_setup.resonance&quot;</span>, <span class="stringliteral">&quot;&quot;</span>);
<a name="l00201"></a>00201                 node.put(<span class="stringliteral">&quot;enable&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a7dd549720e81f791a29e68607fcb358a">m_enable</a>);
<a name="l00202"></a>00202                 node.put(<span class="stringliteral">&quot;name&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>);
<a name="l00203"></a>00203                 node.put(<span class="stringliteral">&quot;mass&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9de5ccd6d828375f6619356f188bdbf">m_mass</a>);
<a name="l00204"></a>00204                 node.put(<span class="stringliteral">&quot;mass_min&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#ae58216b62a7b73ee275c228dc168d8e6">m_mass_min</a>);
<a name="l00205"></a>00205                 node.put(<span class="stringliteral">&quot;mass_max&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a10b762dd6be3a75ef2dbc7db8ce0df82">m_mass_max</a>);
<a name="l00206"></a>00206                 node.put(<span class="stringliteral">&quot;mesonRadius&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a82b703f9b6c54c9ab4410d9c57248850">m_mesonRadius</a>);
<a name="l00207"></a>00207                 node.put(<span class="stringliteral">&quot;width&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6a164223523da9b82f05dfe412bf7d85">m_width</a>);
<a name="l00208"></a>00208                 node.put(<span class="stringliteral">&quot;width_min&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a96cd124336b15b78a2da80667f754c16">m_width_min</a>);
<a name="l00209"></a>00209                 node.put(<span class="stringliteral">&quot;width_max&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#aae6f37d58ee8ea168b28fff6db5065ff">m_width_max</a>);
<a name="l00210"></a>00210                 node.put(<span class="stringliteral">&quot;norm&quot;</span>,v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a068e773739680069b5a20e72db8284dd">m_norm</a>);
<a name="l00211"></a>00211                 node.put(<span class="stringliteral">&quot;strength&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a924fdc23c262d0536bb1c0aafcf167d9">m_strength</a>);
<a name="l00212"></a>00212                 node.put(<span class="stringliteral">&quot;phase&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a9979c547069b4a452c276a63da896a72">m_phase</a>);
<a name="l00213"></a>00213                 node.put(<span class="stringliteral">&quot;spin&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a>);
<a name="l00214"></a>00214                 node.put(<span class="stringliteral">&quot;m&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9adb4ca4e03de9163a175be1c322685">m_m</a>);
<a name="l00215"></a>00215                 node.put(<span class="stringliteral">&quot;n&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6fddfde0c0200d51fd25496d17beb44d">m_n</a>);
<a name="l00216"></a>00216                 node.put(<span class="stringliteral">&quot;daugtherA&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">m_daugtherA</a>);
<a name="l00217"></a>00217                 node.put(<span class="stringliteral">&quot;daugtherB&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">m_daugtherB</a>);
<a name="l00218"></a>00218 <span class="comment">//              //if( !v.valid ) node.put(&quot;&lt;xmlattr&gt;.invalid&quot;, true);</span>
<a name="l00219"></a>00219         }
<a name="l00220"></a>00220         BOOST_FOREACH( <a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml">ResonanceFlatte</a> <span class="keyword">const</span>&amp; v, m_resonancesFlatte ) {
<a name="l00221"></a>00221                 ptree &amp; node = pt.add(<span class="stringliteral">&quot;amplitude_setup.resonance&quot;</span>, <span class="stringliteral">&quot;&quot;</span>);
<a name="l00222"></a>00222                 node.put(<span class="stringliteral">&quot;enable&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a7dd549720e81f791a29e68607fcb358a">m_enable</a>);
<a name="l00223"></a>00223                 node.put(<span class="stringliteral">&quot;name&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a1f8a5834b734d5666dddd144ec8398bc">m_name</a>);
<a name="l00224"></a>00224                 node.put(<span class="stringliteral">&quot;mass&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9de5ccd6d828375f6619356f188bdbf">m_mass</a>);
<a name="l00225"></a>00225                 node.put(<span class="stringliteral">&quot;mass_min&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#ae58216b62a7b73ee275c228dc168d8e6">m_mass_min</a>);
<a name="l00226"></a>00226                 node.put(<span class="stringliteral">&quot;mass_max&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a10b762dd6be3a75ef2dbc7db8ce0df82">m_mass_max</a>);
<a name="l00227"></a>00227                 node.put(<span class="stringliteral">&quot;mesonRadius&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a82b703f9b6c54c9ab4410d9c57248850">m_mesonRadius</a>);
<a name="l00228"></a>00228                 node.put(<span class="stringliteral">&quot;width&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6a164223523da9b82f05dfe412bf7d85">m_width</a>);
<a name="l00229"></a>00229                 node.put(<span class="stringliteral">&quot;width_min&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a96cd124336b15b78a2da80667f754c16">m_width_min</a>);
<a name="l00230"></a>00230                 node.put(<span class="stringliteral">&quot;width_max&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#aae6f37d58ee8ea168b28fff6db5065ff">m_width_max</a>);
<a name="l00231"></a>00231                 node.put(<span class="stringliteral">&quot;norm&quot;</span>,v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a068e773739680069b5a20e72db8284dd">m_norm</a>);
<a name="l00232"></a>00232                 node.put(<span class="stringliteral">&quot;coupling&quot;</span>, v.<a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#a98adfda1a9d2572888847df274b5f71e">m_coupling</a>);
<a name="l00233"></a>00233                 node.put(<span class="stringliteral">&quot;couplingHidden&quot;</span>, v.<a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#ad82c2318cff3fc3a55730f974c48b027">m_couplingHidden</a>);
<a name="l00234"></a>00234                 node.put(<span class="stringliteral">&quot;hiddenParticle1&quot;</span>, v.<a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#a7125dc9d809ab32825a335a40d838734">m_hiddenParticle1</a>);
<a name="l00235"></a>00235                 node.put(<span class="stringliteral">&quot;hiddenParticle2&quot;</span>, v.<a class="code" href="../../d7/d9e/structResonanceFlatte.xhtml#aae306aff3dd0fb3964cb14fa0cbc65ee">m_hiddenParticle2</a>);
<a name="l00236"></a>00236                 node.put(<span class="stringliteral">&quot;strength&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a924fdc23c262d0536bb1c0aafcf167d9">m_strength</a>);
<a name="l00237"></a>00237                 node.put(<span class="stringliteral">&quot;phase&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a9979c547069b4a452c276a63da896a72">m_phase</a>);
<a name="l00238"></a>00238                 node.put(<span class="stringliteral">&quot;spin&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a00abdd3572d15ba4474a1c31c1dc96ef">m_spin</a>);
<a name="l00239"></a>00239                 node.put(<span class="stringliteral">&quot;m&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab9adb4ca4e03de9163a175be1c322685">m_m</a>);
<a name="l00240"></a>00240                 node.put(<span class="stringliteral">&quot;n&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a6fddfde0c0200d51fd25496d17beb44d">m_n</a>);
<a name="l00241"></a>00241                 node.put(<span class="stringliteral">&quot;daugtherA&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#a375c70fee829f4e5dd3a6ab9f266e7aa">m_daugtherA</a>);
<a name="l00242"></a>00242                 node.put(<span class="stringliteral">&quot;daugtherB&quot;</span>, v.<a class="code" href="../../d6/d5b/structResonance.xhtml#ab5f5db09dd23c0e2bf1af0f8bcef96b2">m_daugtherB</a>);
<a name="l00243"></a>00243 <span class="comment">//              //if( !v.valid ) node.put(&quot;&lt;xmlattr&gt;.invalid&quot;, true);</span>
<a name="l00244"></a>00244         }
<a name="l00245"></a>00245 
<a name="l00246"></a>00246 
<a name="l00247"></a>00247         <span class="comment">// Write the property tree to the XML file.</span>
<a name="l00248"></a>00248         write_xml(filename, pt);
<a name="l00249"></a>00249 }
<a name="l00250"></a>00250 
<a name="l00251"></a>00251 <span class="preprocessor">#endif</span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Mon Dec 16 2013 for ComPWA by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.7.4 </small></address>
</body>
</html>
